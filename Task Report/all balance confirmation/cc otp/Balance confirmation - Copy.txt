Blade 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
add blade file 
resources\views\emails\balanceconfirmotp.blade.php
resources\views\backEnd\confirmationaccept.blade.php


debtors table me 
otp
	otpverifydate


controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\ConfirmationController.php
find function  balanceconfirmationreminderlist() after this function add below funcn 

    public function confirmationauthotp(Request $request)
    {
        if ($request->ajax()) {
            if (isset($request->id)) {
                if ($request->status == 1) {

                    $users = DB::table('debtors')->where('id', $request->id)->first();

                    if ($request->status == $users->status || $users->status == 0) {
                        $otpsuccessmessage = 'You have allready Submitted';
                        return response()->json([
                            'otpsuccessmessage2' => $otpsuccessmessage,
                        ]);
                    }

                    $otp = sprintf("%06d", mt_rand(1, 999999));

                    $data = array(
                        'email' =>  $users->email,
                        'otp' =>  $otp,
                    );
                    Mail::send('emails.balanceconfirmotp', $data, function ($msg) use ($data) {
                        $msg->to($data['email']);
                        $msg->subject('VSA Balance Confirmation OTP');
                    });

                    $update = DB::table('debtors')
                        ->where('id', $request->id)->update([
                            'otp' =>  $otp,
                            'otpverifydate' => date('Y-m-d H:i:s'),
                        ]);

                    $otpsuccessmessage = 'We have sent otp on mail please enter otp';
                    return response()->json([
                        'otpsuccessmessage' => $otpsuccessmessage,
                        'debitid' => $users->id,
                        'assignmentgenerate_id' => $users->assignmentgenerate_id,
                        'type' => $users->type,
                        'status' => $request->status,
                    ]);
                } else {

                    $users = DB::table('debtors')->where('id', $request->id)->first();

                    if ($request->status1 == $users->status || $users->status == 1) {
                        $otpsuccessmessage = 'You have allready Submitted';
                        return response()->json([
                            'otpsuccessmessage3' => $otpsuccessmessage,
                        ]);
                    }

                    $otp = sprintf("%06d", mt_rand(1, 999999));
                    $data = array(
                        'email' =>  $users->email,
                        'otp' =>  $otp,
                    );

                    Mail::send('emails.balanceconfirmotp', $data, function ($msg) use ($data) {
                        $msg->to($data['email']);
                        $msg->subject('VSA Balance Confirmation refuse OTP');
                    });
                    $update = DB::table('debtors')
                        ->where('id', $request->id)->update([
                            'otp' =>  $otp,
                            'otpverifydate' => date('Y-m-d H:i:s'),
                        ]);

                    $otpsuccessmessage = 'We have sent otp on mail please enter otp';

                    return response()->json([
                        'otpsuccessmessage1' => $otpsuccessmessage,
                        'debitid1' => $users->id,
                        'assignmentgenerate_id1' => $users->assignmentgenerate_id,
                        'type1' => $users->type,
                        'status1' => $request->status,
                    ]);
                }
            }
        }
    }

    public function otpapstore(Request $request)
    {
        try {
            if ($request->status == 1) {
                $otp = $request->otp;
                $users = DB::table('debtors')->where('id', $request->debitid)->first();

                if ($request->status == $users->status || $users->status == 0) {
                    return back()->withErrors(['error' => 'You have allready Submitted'])->withInput();
                }

                if ($otp == $users->otp) {
                    DB::table('debtors')
                        ->where('assignmentgenerate_id', $request->assignmentgenerate_id)->where('id', $request->debitid)->update([
                            'status'         => $request->status,
                            'otpverifydate' => date('Y-m-d H:i:s'),
                            'updated_at'         =>   date("Y-m-d")
                        ]);

                    return view('backEnd.teamconfirm');
                } else {

                    return redirect()->back()->with('success_message', 'otp did not match!.');
                }
            } else {
                $otp = $request->otp1;
                $users = DB::table('debtors')->where('id', $request->debitid1)->first();

                if ($request->status1 == $users->status || $users->status == 1) {
                    return back()->withErrors(['error' => 'You have allready Submitted'])->withInput();
                }

                if ($otp == $users->otp) {

                    $debtorconfirm = DB::table('debtorconfirmations')
                        ->where('assignmentgenerate_id', $request->assignmentgenerate_id1)->where('debtor_id', $request->debitid1)->first();

                    $clientid = $request->assignmentgenerate_id1;
                    $debtorid = $request->debitid1;
                    $status = $request->status1;

                    return view('backEnd.teamreject', compact('status', 'clientid', 'debtorid', 'debtorconfirm'));
                } else {

                    return redirect()->back()->with('success_message', 'otp did not match!.');
                }
            }
        } catch (Exception $e) {
            DB::rollBack();
            Log::emergency("File:" . $e->getFile() . "Line:" . $e->getLine() . "Message:" . $e->getMessage());
            report($e);
            $output = array('msg' => $e->getMessage());
            return back()->withErrors($output)->withInput();
        }
    }









################################################################################################################################
Route 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
add this route 

Route::get('/confirmationauthotp',  [ConfirmationController::class, 'confirmationauthotp']);
Route::post('/confirmationotp', [ConfirmationController::class, 'otpapstore'])->name('confirmationotp');
