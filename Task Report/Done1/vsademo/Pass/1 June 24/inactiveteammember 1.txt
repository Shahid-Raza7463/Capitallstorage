Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\StepController.php
find text $teammemberall = 
replace   $teammemberall vairable 

        $teammemberall = Teammember::whereIn('role_id', [15, 14])
            ->where('status', 1)
            ->with('title', 'role')
            ->get();


222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\ChecklistanswerController.php
find text  $teammember = Teammember::where('role_id', '=', 15)
replace     $teammember vairable 

        $teammember = Teammember::whereIn('role_id', [15, 14])
            ->where('status', 1)
            ->with('title', 'role')
            ->get();
	
		
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\teammember\form.blade.php
find text  <label class="font-weight-600">Rejoining Date</label>
replace  replace Rejoining Date input box

    @if (Request::is('teammember/*/edit'))
        @if ($teammember->status == '0')
            <div class="col-4">
                <div class="form-group">
                    <label class="font-weight-600">Rejoining Date</label>
                    <input type="date" id="example-date-input" name="rejoining_date"
                        value="{{ $teammember->rejoining_date ?? '' }}" class="form-control leaveDate"
                        placeholder="Enter joining_date">
                </div>
            </div>
        @endif
    @endif

22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\BackEndController.php
is file ka backup lelo update se pahle 
replace    function index()

  public function index()
  {
    $mentor_id = DB::table('teammembers')
      ->join('users', 'users.teammember_id', 'teammembers.id')
      ->where('users.teammember_id', auth()->user()->teammember_id)
      ->pluck('mentor_id')
      ->first();

    $mentee_id = DB::table('teammembers')
      ->join('users', 'users.teammember_id', 'teammembers.id')
      ->where('teammembers.mentor_id', auth()->user()->teammember_id)
      //->pluck('teammembers.id')
      ->get();

    //dd($mentee_id);
    $mentor = null;
    $mentees = null;

    if ($mentor_id != null) {
      $mentor = DB::table('teammembers')->where('id', $mentor_id)->first();
    }

    if (count($mentee_id) != 0) {
      $mentees = $mentee_id;
    }

    // Set $mentees to null (if needed)
    if ($mentees == null) {
      $mentees = null;
    }

    $todayBirthdays = Teammember::whereNotNull('dateofbirth')
      ->where('status', '1')
      ->get()
      ->filter(function ($birthday) {
        $dateofbirth = Carbon::parse($birthday->dateofbirth);
        $currentDate = Carbon::now();

        // Compare the month and day without considering the current year
        return $dateofbirth->month == $currentDate->month && $dateofbirth->day == $currentDate->day;
      })
      ->sortBy('dateofbirth');

    $upcomingBirthdays = Teammember::where('status', '1')
      ->whereRaw('DATE_FORMAT(dateofbirth, "%m-%d") > DATE_FORMAT(NOW(), "%m-%d")')
      ->orderByRaw('DATE_FORMAT(dateofbirth, "%m-%d")')
      ->limit(7)
      ->get();



    $workAnniversaries = Teammember::whereNotNull('joining_date')
      ->where('status', '1')
      ->get()
      ->filter(function ($teammember) {
        $joiningDate = Carbon::parse($teammember->joining_date);
        $currentDate = Carbon::now();

        // Compare the month and day without considering the current year
        $isAnniversaryToday = $joiningDate->month == $currentDate->month && $joiningDate->day == $currentDate->day;

        // Exclude work anniversaries with a duration of 0 years
        $isNonZeroAnniversary = $joiningDate->diffInYears($currentDate) > 0;

        return $isAnniversaryToday && $isNonZeroAnniversary;
      })
      ->sortBy('joining_date')
      ->take(2);

    $upcomingHolidays = Holiday::where('startdate', '>', now()->format('Y-m-d'))
      ->where('status', 1)
      ->orderBy('startdate', 'asc')
      ->take(2)
      ->get();

    if (auth()->user()->role_id == 11 || auth()->user()->role_id == 12) {
      $authidd = Assignmentteammapping::where('teammember_id', auth()->user()->teammember_id)->select('assignmentmapping_id')->pluck('assignmentmapping_id')->first();
      $authid = auth()->user()->teammember_id;
      $notificationDatas =  DB::table('notifications')
        ->join('teammembers', 'teammembers.id', 'notifications.created_by')
        ->select(
          'notifications.*',
          'teammembers.profilepic',
          'teammembers.team_member'
        )->orderBy('created_at', 'desc')->paginate('2');
      // dd($notificationDatas);
      $client = Client::count();
      $teammember = Teammember::where('status', '1')->count();
      $userid = auth()->user()->role_id;
      $pageid = Permission::where('role_id', $userid)->select('page_id')->pluck('page_id')->first();
      $assetticket = DB::table('assettickets')
        ->leftjoin('teammembers', 'teammembers.id', 'assettickets.created_by')
        ->select('assettickets.*', 'teammembers.team_member')->orderBy('created_at', 'desc')->paginate(2);
      $assignment =  DB::table('assignmentbudgetings')
        ->leftjoin('assignments', 'assignments.id', 'assignmentbudgetings.assignment_id')
        ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
        ->select(
          'assignmentbudgetings.*',
          'clients.client_name',
          'assignments.assignment_name'
        )->orderBy('assignmentbudgetings.created_at', 'desc')->take(5)->get();

      $openleave = DB::table('applyleaves')
        ->where('status', 0)
        ->count();

      $opentimesheetrequests = DB::table('timesheetrequests')
        ->where('status', 0)
        ->count();

      $assignmentcount = Assignmentmapping::count();
      $notification = Notification::count();

      // Get open assinment count
      $openassignmentcount =  DB::table('assignmentmappings')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
        ->where('assignmentbudgetings.status', '1')
        ->whereNotIn('assignmentbudgetings.assignmentname', ['Unallocated', 'Official Travel', 'Off/Holiday', 'Seminar/Conference/Post Qualification Course'])
        ->count();
      // Get closed assinment count
      $closedassignmentcount =  DB::table('assignmentmappings')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
        ->where('assignmentbudgetings.status', '0')
        ->whereNotIn('assignmentbudgetings.assignmentname', ['Unallocated', 'Official Travel', 'Off/Holiday', 'Seminar/Conference/Post Qualification Course'])
        ->count();

      return view('backEnd.index', compact('openassignmentcount', 'closedassignmentcount', 'opentimesheetrequests', 'openleave', 'mentor', 'mentees', 'notification', 'assignmentcount', 'assignment', 'pageid', 'assetticket', 'client', 'teammember', 'notificationDatas', 'upcomingBirthdays', 'workAnniversaries', 'upcomingHolidays', 'todayBirthdays'));
    } elseif (auth()->user()->role_id == 13) {
      $authidd = Assignmentteammapping::where('teammember_id', auth()->user()->teammember_id)->select('assignmentmapping_id')->pluck('assignmentmapping_id')->first();
      $authid = auth()->user()->teammember_id;
      $notificationDatas =  DB::table('notifications')
        ->join('teammembers', 'teammembers.id', 'notifications.created_by')
        ->Where('targettype', '3')
        ->orWhere('targettype', '2')
        ->select(
          'notifications.*',
          'teammembers.profilepic',
          'teammembers.team_member'
        )->orderBy('created_at', 'desc')->paginate('2');
      //  dd($notificationDatas);
      $notification = Notification::count();
      $client = Client::count();
      $tender = Tender::where('teammember_id', auth()->user()->teammember_id)->count();
      $teammember = Teammember::where('status', '1')->count();
      $userid = auth()->user()->role_id;
      $pageid = Permission::where('role_id', $userid)->select('page_id')->pluck('page_id')->first();

      $openleave = DB::table('applyleaves')
        ->where('approver', auth()->user()->teammember_id)
        ->where('status', 0)
        ->count();

      $assetticket = DB::table('assettickets')
        ->leftjoin('teammembers', 'teammembers.id', 'assettickets.created_by')->where('assettickets.created_by', auth()->user()->teammember_id)
        ->select('assettickets.*', 'teammembers.team_member')->orderBy('created_at', 'desc')->get();
      $assignment =  DB::table('assignmentmappings')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
        ->leftjoin('assignments', 'assignments.id', 'assignmentbudgetings.assignment_id')
        ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
        ->where(function ($query) {
          $query->where('assignmentmappings.leadpartner', auth()->user()->teammember_id)
            ->orWhere('assignmentmappings.otherpartner', auth()->user()->teammember_id);
        })

        ->select(
          'assignmentmappings.*',
          'clients.client_name',
          'assignmentbudgetings.assignmentname',
          'assignments.assignment_name',
          'assignmentbudgetings.assignmentgenerate_id'
        )
        ->where('assignmentbudgetings.status', 1)
        ->take(5)->get();

      $assignmentcount = DB::table('assignmentmappings')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
        ->leftjoin('assignments', 'assignments.id', 'assignmentbudgetings.assignment_id')
        ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
        ->where(function ($query) {
          $query->where('assignmentmappings.leadpartner', auth()->user()->teammember_id)
            ->orWhere('assignmentmappings.otherpartner', auth()->user()->teammember_id);
        })

        ->select(
          'assignmentmappings.*',
          'clients.client_name',
          'assignmentbudgetings.assignmentname',
          'assignments.assignment_name',
          'assignmentbudgetings.assignmentgenerate_id'
        )
        ->where('assignmentbudgetings.status', 1)
        ->count();

      $opentimesheetrequests = DB::table('timesheetrequests')
        ->where('status', 0)
        ->where(function ($query) {
          $query->where('timesheetrequests.partner', auth()->user()->teammember_id)
            ->orWhere('timesheetrequests.createdby', auth()->user()->teammember_id);
        })
        ->count();

      //Aproved leave jan to dec 
      $currentYear = date('Y');
      $approvedleavesvalue = DB::table('applyleaves')
        ->where('createdby', auth()->user()->teammember_id)
        ->where('status', 1)
        ->whereYear('from',  $currentYear)
        ->get();

      $leaveDurations = [];
      foreach ($approvedleavesvalue as $approvedleavesvalues) {
        $to = Carbon::createFromFormat('Y-m-d', $approvedleavesvalues->to ?? '');
        $from = Carbon::createFromFormat('Y-m-d', $approvedleavesvalues->from);

        $diff_in_days = $to->diffInDays($from) + 1;

        $holidaycount = DB::table('holidays')
          ->where('startdate', '>=', $approvedleavesvalues->from)
          ->where('enddate', '<=', $approvedleavesvalues->to)
          ->count();

        $leaveDurationcount = $diff_in_days - $holidaycount;
        $leaveDurations[] = $leaveDurationcount;
      }

      $approvedleavesvaluecount = array_sum($leaveDurations);
      // dd($approvedleavesvaluecount);
      //Aproved leave jan to dec end hare 

      return view('backEnd.index', compact('opentimesheetrequests', 'openleave', 'tender', 'mentor', 'mentees', 'notification', 'assignmentcount', 'assignment', 'pageid', 'assetticket', 'client', 'teammember', 'notificationDatas', 'upcomingBirthdays', 'workAnniversaries', 'upcomingHolidays', 'todayBirthdays', 'approvedleavesvaluecount'));
    } elseif (auth()->user()->role_id == 16) {
      $authidd = Assignmentteammapping::where('teammember_id', auth()->user()->teammember_id)->select('assignmentmapping_id')->pluck('assignmentmapping_id')->first();
      $authid = auth()->user()->teammember_id;
      $notificationDatas =    $notificationDatas = DB::table('notifications')
        //    ->leftjoin('users','users.id','notifications.created_by')
        ->leftjoin('teammembers', 'teammembers.id', 'notifications.created_by')
        ->Where('targettype', '3')->orWhere('targettype', '2')->orderBy('notifications.id', 'desc')->paginate(2);
      //  dd($notificationDatas);
      $notification = Notification::count();
      $client = Client::count();
      $tender = Tender::where('teammember_id', auth()->user()->teammember_id)->count();
      $teammember = Teammember::where('status', '1')->count();
      $userid = auth()->user()->role_id;
      $pageid = Permission::where('role_id', $userid)->select('page_id')->pluck('page_id')->first();
      $assetticket = DB::table('assettickets')
        ->leftjoin('teammembers', 'teammembers.id', 'assettickets.created_by')
        ->select('assettickets.*', 'teammembers.team_member')->orderBy('created_at', 'desc')->get();
      $assignment =  DB::table('assignmentmappings')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
        ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
        ->leftjoin('assignments', 'assignments.id', 'assignmentbudgetings.assignment_id')
        ->leftjoin('assignmentteammappings', 'assignmentteammappings.assignmentmapping_id', 'assignmentmappings.id')

        ->select(
          'assignmentbudgetings.client_id',
          'assignmentbudgetings.assignmentgenerate_id',
          'clients.client_name',
          'assignments.assignment_name'
        )
        ->where('assignmentmappings.leadpartner', auth()->user()->teammember_id)->distinct()->get();
      $assignmentcount = count($assignment);
      return view('backEnd.index', compact('tender', 'mentor', 'mentees', 'notification', 'assignmentcount', 'assignment', 'pageid', 'assetticket', 'client', 'teammember', 'notificationDatas', 'upcomingBirthdays', 'workAnniversaries', 'upcomingHolidays', 'todayBirthdays'));
    } elseif (auth()->user()->role_id == 14 || auth()->user()->role_id == 15) {
      //Aproved leave jan to dec 
      $currentYear = date('Y');
      $approvedleavesvalue = DB::table('applyleaves')
        ->where('createdby', auth()->user()->teammember_id)
        ->where('status', 1)
        ->whereYear('from',  $currentYear)
        ->get();

      $leaveDurations = [];
      foreach ($approvedleavesvalue as $approvedleavesvalues) {
        $to = Carbon::createFromFormat('Y-m-d', $approvedleavesvalues->to ?? '');
        $from = Carbon::createFromFormat('Y-m-d', $approvedleavesvalues->from);

        $diff_in_days = $to->diffInDays($from) + 1;

        $holidaycount = DB::table('holidays')
          ->where('startdate', '>=', $approvedleavesvalues->from)
          ->where('enddate', '<=', $approvedleavesvalues->to)
          ->count();

        $leaveDurationcount = $diff_in_days - $holidaycount;
        $leaveDurations[] = $leaveDurationcount;
      }

      $approvedleavesvaluecount = array_sum($leaveDurations);
      // dd($approvedleavesvaluecount);
      //Aproved leave jan to dec end hare 
      // dd(auth()->user()->teammember_id);
      $authidd = Assignmentteammapping::where('teammember_id', auth()->user()->teammember_id)->select('assignmentmapping_id')->pluck('assignmentmapping_id')->first();
      $authid = auth()->user()->teammember_id;

      $notificationDatas =   DB::table('notifications')
        ->leftjoin('teammembers', 'teammembers.id', 'notifications.created_by')
        ->where('notifications.targettype', '1')
        ->select('notifications.*', 'teammembers.team_member', 'teammembers.profilepic')->orWhere('targettype', '2')->orderBy('notifications.id', 'desc')->paginate(2);

      //  dd($notificationDatas);
      $notification = Notification::count();
      $client = Client::count();
      $teammember = Teammember::where('status', '1')->count();
      $userid = auth()->user()->role_id;
      $pageid = Permission::where('role_id', $userid)->select('page_id')->pluck('page_id')->first();
      $assetticket = DB::table('assettickets')
        ->leftjoin('users', 'users.id', 'assettickets.created_by')
        ->leftjoin('teammembers', 'teammembers.id', 'users.teammember_id')->where('assettickets.created_by', auth()->user()->teammember_id)
        ->select('assettickets.*', 'teammembers.team_member')->orderBy('created_at', 'desc')->get();

      //  dd($notificationDatas);

      $assignment =  DB::table('assignmentmappings')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
        ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
        ->leftjoin('assignmentteammappings', 'assignmentteammappings.assignmentmapping_id', 'assignmentmappings.id')
        // get assignment name only
        ->leftjoin('assignments', 'assignments.id', 'assignmentmappings.assignment_id')
        ->whereNotIn('clients.id', [33, 32, 34, 29])
        ->select(
          'assignmentbudgetings.client_id',
          'clients.client_name',
          'assignmentbudgetings.assignmentgenerate_id',
          'assignments.assignment_name',
          'assignmentbudgetings.assignmentname'
        )
        // ->where('clients.status', 0)
        ->where('assignmentbudgetings.status', 1)
        ->where('assignmentteammappings.teammember_id', auth()->user()->teammember_id)->distinct()->take(5)->get();

      // $assignmentcount = count($assignment);

      $assignmentcount = DB::table('assignmentmappings')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
        ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
        ->leftjoin('assignmentteammappings', 'assignmentteammappings.assignmentmapping_id', 'assignmentmappings.id')
        // get assignment name only
        ->leftjoin('assignments', 'assignments.id', 'assignmentmappings.assignment_id')
        ->whereNotIn('clients.id', [33, 32, 34, 29])
        ->select(
          'assignmentbudgetings.client_id',
          'clients.client_name',
          'assignmentbudgetings.assignmentgenerate_id',
          'assignments.assignment_name',
          'assignmentbudgetings.assignmentname'
        )
        // ->where('clients.status', 0)
        ->where('assignmentbudgetings.status', 1)
        ->where('assignmentteammappings.teammember_id', auth()->user()->teammember_id)->distinct()->count();

      // manager
      return view('backEnd.index', compact('notification', 'mentor', 'mentees', 'assignmentcount', 'assignment', 'pageid', 'assetticket', 'client', 'teammember', 'notificationDatas', 'upcomingBirthdays', 'workAnniversaries', 'upcomingHolidays', 'todayBirthdays', 'approvedleavesvaluecount'));
    } else {
      $authidd = Assignmentteammapping::where('teammember_id', auth()->user()->teammember_id)->select('assignmentmapping_id')->pluck('assignmentmapping_id')->first();
      $authid = auth()->user()->teammember_id;
      $notificationDatas =   DB::table('notifications')
        //  ->leftjoin('users','users.id','notifications.created_by')
        ->leftjoin('teammembers', 'teammembers.id', 'notifications.created_by')
        ->where('notifications.targettype', '1')
        ->select('notifications.*', 'teammembers.team_member', 'teammembers.profilepic')->orWhere('targettype', '2')->orderBy('notifications.id', 'desc')->paginate(2);

      //  dd($notificationDatas);
      $notification = Notification::count();
      $client = Client::count();
      $teammember = Teammember::where('status', '1')->count();
      $userid = auth()->user()->role_id;
      $pageid = Permission::where('role_id', $userid)->select('page_id')->pluck('page_id')->first();
      $assetticket = DB::table('assettickets')
        ->leftjoin('users', 'users.id', 'assettickets.created_by')
        ->leftjoin('teammembers', 'teammembers.id', 'users.teammember_id')->where('assettickets.created_by', auth()->user()->teammember_id)
        ->select('assettickets.*', 'teammembers.team_member')->orderBy('created_at', 'desc')->get();

      $assignment =  DB::table('assignmentmappings')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
        ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
        ->leftjoin('assignmentteammappings', 'assignmentteammappings.assignmentmapping_id', 'assignmentmappings.id')
        ->leftjoin('assignments', 'assignments.id', 'assignmentmappings.assignment_id')
        ->select(
          'assignmentbudgetings.client_id',
          'clients.client_name',
          'assignmentbudgetings.assignmentgenerate_id',
          'assignments.assignment_name',
          'assignmentbudgetings.assignmentname'
        )
        ->where('clients.status', 1)
        ->where('assignmentteammappings.teammember_id', auth()->user()->teammember_id)->distinct()->take(5)->get();

      $assignmentcount = count($assignment);
      return view('backEnd.index', compact('notification', 'mentor', 'mentees', 'assignmentcount', 'assignment', 'pageid', 'assetticket', 'client', 'teammember', 'notificationDatas', 'upcomingBirthdays', 'workAnniversaries', 'upcomingHolidays', 'todayBirthdays'));
    }
  }


22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\index.blade.php
find text  @if (Auth::user()->role_id == 13)
replace      @if (Auth::user()->role_id == 13)


    @if (Auth::user()->role_id == 13)
        <div class="body-content">
            <div class="row">

                <div class="col-md-6 col-lg-3">
                    <!--Active users indicator-->
                    <div class="p-2 bg-primary text-white rounded mb-3 p-3 shadow-sm text-center">
                        <a href="{{ url('assignment_report') }}">
                            <div style="color:white;"
                                class="opacity-50 header-pretitle fs-11 font-weight-bold text-uppercase">Open Assignment
                            </div>
                            <div style="color:white;" class="fs-32 text-monospace">{{ $assignmentcount }}</div>
                            <small style="color:white;"> Assignment</small>
                        </a>
                    </div>
                </div>
                <div class="col-md-6 col-lg-3">
                    <!--Active users indicator-->
                    <div class="p-2 bg-success text-white rounded mb-3 p-3 shadow-sm text-center">
                        <a href="{{ url('/openleave/' . '0') }}">
                            <div style="color:white;"
                                class="opacity-50 header-pretitle fs-11 font-weight-bold text-uppercase">Leave</div>
                            <div style="color:white;" class="fs-32 text-monospace">{{ $openleave ?? '' }}</div>
                            <small style="color:white;">Open Leave</small>
                        </a>
                    </div>
                </div>
                <div class="col-md-6 col-lg-3">
                    <!--Active users indicator-->
                    <div class="p-2  text-white rounded mb-3 p-3 shadow-sm text-center" style="background: darkcyan;green">
                        <a href="{{ url('/opentimesheetrequest/' . '0') }}">
                            <div style="color:white;"
                                class="opacity-50 header-pretitle fs-11 font-weight-bold text-uppercase">Timesheet Request
                            </div>
                            <div style="color:white;" class="fs-32 text-monospace">{{ $opentimesheetrequests ?? '' }}</div>
                            <small style="color:white;">Open Timesheet Request</small>
                        </a>
                    </div>
                </div>

                <div class="col-md-6 col-lg-3">
                    <div class="p-2 bg-success text-white rounded mb-3 p-3 shadow-sm text-center">
                        <a href="{{ url('applyleave') }}">
                            <div style="color:white;"
                                class="opacity-50 header-pretitle fs-11 font-weight-bold text-uppercase">Approved leaves
                            </div>
                            <div style="color:white;" class="fs-32 text-monospace">{{ $approvedleavesvaluecount ?? '0' }}
                            </div>
                            <small style="color:white;">leaves (Jan to Dec)</small>
                        </a>
                    </div>
                </div>
                {{--   <div class="col-md-6 col-lg-3">
            <!--Active users indicator-->
            <div class="p-2 text-white rounded mb-3 p-3 shadow-sm text-center" style="background-color: darkcyan;">
				   <a href="{{url('notification')}}" >
                <div style="color:white;" class="opacity-50 header-pretitle fs-11 font-weight-bold text-uppercase">Notification</div>
                <div style="color:white;" class="fs-32 text-monospace">{{ $notification }}</div>
                <small style="color:white;">Latest Notification</small>
				</a>
            </div>
        </div> --}}

            </div>
        </div>
    @endif

22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\index.blade.php
find text  @if (Auth::user()->role_id == 14)
replace      @if (Auth::user()->role_id == 14)


 @if (Auth::user()->role_id == 14)
        <div class="body-content">
            <div class="row">
                <div class="col-md-6 col-lg-3">
                    <!--Active users indicator-->
                    <div class="p-2 bg-primary text-white rounded mb-3 p-3 shadow-sm text-center">
                        <a href="{{ url('assignment_report') }}">
                            <div style="color:white;"
                                class="opacity-50 header-pretitle fs-11 font-weight-bold text-uppercase">Open Assignment
                            </div>
                            <div style="color:white;" class="fs-32 text-monospace">{{ $assignmentcount }}</div>
                            <small style="color:white;"> Assignment</small>
                        </a>
                    </div>
                </div>

                <div class="col-md-6 col-lg-3">
                    <div class="p-2 bg-success text-white rounded mb-3 p-3 shadow-sm text-center">
                        <a href="{{ url('applyleave') }}">
                            <div style="color:white;"
                                class="opacity-50 header-pretitle fs-11 font-weight-bold text-uppercase">Approved leaves
                            </div>
                            <div style="color:white;" class="fs-32 text-monospace">{{ $approvedleavesvaluecount ?? '0' }}
                            </div>
                            <small style="color:white;">leaves (Jan to Dec)</small>
                        </a>
                    </div>
                </div>
                {{-- <div class="col-md-6 col-lg-3">
            <!--Active users indicator-->
            <div class="p-2 bg-success text-white rounded mb-3 p-3 shadow-sm text-center">
                <a href="{{url('tender')}}" >
                <div style="color:white;" class="opacity-50 header-pretitle fs-11 font-weight-bold text-uppercase">Tender</div>
                <div style="color:white;" class="fs-32 text-monospace">{{ $tender ??''}}</div>
                <small style="color:white;" >latest tender</small>
                </a>
            </div>
        </div> --}}
                {{--   <div class="col-md-6 col-lg-3">
            <!--Active users indicator-->
            <div class="p-2 text-white rounded mb-3 p-3 shadow-sm text-center" style="background-color: darkcyan;">
				   <a href="{{url('notification')}}" >
                <div style="color:white;" class="opacity-50 header-pretitle fs-11 font-weight-bold text-uppercase">Notification</div>
                <div style="color:white;" class="fs-32 text-monospace">{{ $notification }}</div>
                <small style="color:white;">Latest Notification</small>
				</a>
            </div>
        </div> --}}

            </div>


        </div>
    @endif

22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\index.blade.php
find text   @if (Auth::user()->role_id == 15)
replace     @if (Auth::user()->role_id == 15)


 @if (Auth::user()->role_id == 15)
        <div class="body-content">
            <div class="row">
                <div class="col-md-6 col-lg-3">
                    <!--Active users indicator-->
                    <div class="p-2 bg-primary text-white rounded mb-3 p-3 shadow-sm text-center">
                        <a href="{{ url('assignment_report') }}">
                            <div style="color:white;"
                                class="opacity-50 header-pretitle fs-11 font-weight-bold text-uppercase">Total Assignment
                            </div>
                            <div style="color:white;" class="fs-32 text-monospace">{{ $assignmentcount }}</div>
                            <small style="color:white;"> Assignment</small>
                        </a>
                    </div>
                </div>
                <div class="col-md-6 col-lg-3">
                    <div class="p-2 bg-success text-white rounded mb-3 p-3 shadow-sm text-center">
                        <a href="{{ url('applyleave') }}">
                            <div style="color:white;"
                                class="opacity-50 header-pretitle fs-11 font-weight-bold text-uppercase">Approved leaves
                            </div>
                            <div style="color:white;" class="fs-32 text-monospace">{{ $approvedleavesvaluecount ?? '0' }}
                            </div>
                            <small style="color:white;">leaves (Jan to Dec)</small>
                        </a>
                    </div>
                </div>
                {{--  <div class="col-md-6 col-lg-3">
            <!--Active users indicator-->
            <div class="p-2 text-white rounded mb-3 p-3 shadow-sm text-center" style="background-color: darkcyan;">
                <div class="opacity-50 header-pretitle fs-11 font-weight-bold text-uppercase">Notification</div>
                <div class="fs-32 text-monospace">{{ $notification }}</div>
                <small>Latest Notification</small>
            </div>
        </div> --}}

            </div>


        </div>
    @endif		
	
	
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\ApplyleaveController.php

find text   return view('backEnd.applyleave.index',
add below code before return view('backEnd.applyleave.index',   line 

 //Aproved leave jan to dec 
      $currentYear = date('Y');
      $approvedleavesvalue = DB::table('applyleaves')
        ->where('createdby', auth()->user()->teammember_id)
        ->where('status', 1)
        ->whereYear('from',  $currentYear)
        ->get();

      $leaveDurations = [];
      foreach ($approvedleavesvalue as $approvedleavesvalues) {
        $to = Carbon::createFromFormat('Y-m-d', $approvedleavesvalues->to ?? '');
        $from = Carbon::createFromFormat('Y-m-d', $approvedleavesvalues->from);

        $diff_in_days = $to->diffInDays($from) + 1;

        $holidaycount = DB::table('holidays')
          ->where('startdate', '>=', $approvedleavesvalues->from)
          ->where('enddate', '<=', $approvedleavesvalues->to)
          ->count();

        $leaveDurationcount = $diff_in_days - $holidaycount;
        $leaveDurations[] = $leaveDurationcount;
      }

      $approvedleavesvaluecount = array_sum($leaveDurations);
      // dd($approvedleavesvaluecount);
      //Aproved leave jan to dec end hare 



22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\ApplyleaveController.php

find text    return view('backEnd.applyleave.index',
replace   return view('backEnd.applyleave.index',

     return view('backEnd.applyleave.index', compact('countCasualafmnth', 'leavetaken', 'teammonthcount', 'totalcountCasual', 'myapplyleaveDatas', 'teamapplyleaveDatas', 'birthday', 'countbirthday', 'Casual', 'Sick', 'countSick', 'countCasual', 'clInAttendance', 'slInAttendance', 'approvedleavesvaluecount'));


22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\applyleave\index.blade.php
find text  <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
replace ul tag 

                 <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
                      <li class="nav-item">
                          <a class="nav-link active" id="pills-home-tab" data-toggle="pill" href="#pills-home"
                              role="tab" aria-controls="pills-home" aria-selected="true">My Application</a>
                      </li>

                      @if (Auth::user()->role_id == 13)
                          <li class="nav-item">
                              <a class="nav-link" id="pills-user-tab" data-toggle="pill" href="#pills-user" role="tab"
                                  aria-controls="pills-user" aria-selected="false">Team Application</a>
                          </li>
                      @endif
                      @if (Auth::user()->role_id == 14 || Auth::user()->role_id == 15 || Auth::user()->role_id == 13)
                          <div class="nav-item ml-auto d-flex align-items-center">
                              <p class="m-0 text-center flex-grow-1 text-danger">Approved leaves:
                                  {{ $approvedleavesvaluecount ?? '0' }}
                              </p>
                          </div>
                      @endif
                  </ul>










