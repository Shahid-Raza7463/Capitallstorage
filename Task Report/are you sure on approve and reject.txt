Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\layouts\includes\js.blade.php




 {{-- ###################################################################################################### --}}
 {{-- shahid script start hare  --}}
 <script>
     $(document).ready(function() {
         $('#saveform').click(function(event) {
             var reasoninputvalve = $('#reasoninput').val().trim();

             if (reasoninputvalve === "") {
                 alert('Please enter a reason. It is mandatory.');
                 event.preventDefault();
                 return false;
             }

             // Confirmation prompt
             var confirmSubmit = confirm('Are you sure you want to submit ?');
             if (!confirmSubmit) {
                 event.preventDefault();
                 return false;
             }
         });
     });
 </script>



Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\applyleave\openindex.blade.php

total 5 file 



                                                            <div class="col-12">
                                                                <label for="">Reason : <span class="text-danger">*</span> </label>
                                                            </div>




                                                                              <textarea rows="6" name="remark" class="form-control" placeholder="" id="reasoninput"></textarea>
																			  
																			  
																			  
																			  
																			  
                                                                  <button type="submit" style="float: right"
                                                                      class="btn btn-success" id="saveform">Save
                                                                  </button>	






for approve button 


onclick="return confirm('Are you sure you want to approve this ?');"															  




Blade 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\StepController.php
find text   viewAssignment($id)
replace  viewAssignment function



    public function viewAssignment($id)
    {
        // $teammemberall = Teammember::where('role_id', '=', 15)->orwhere('role_id', '=', 14)->where('status', '=', 1)->with('title', 'role')->get();
        $teammemberall = Teammember::whereIn('role_id', [15, 14])
            ->where('status', 1)
            ->with('title', 'role')
            ->get();

        $assignmentid = Assignmentmapping::where('assignmentgenerate_id', $id)->select('assignment_id')->pluck('assignment_id')->first();
        // dd($assignmentgenerateid); 
        $assignmentcheck =
            DB::table('financialstatementclassifications')
            ->where('assignmentgenerate_id', $id)
            ->get();

        if ($assignmentcheck->isEmpty()) {
            $assignmentcheckDatas =
                DB::table('financialstatementclassifications')
                ->where('assignment_id', $assignmentid)
                ->where('assignmentgenerate_id', null)
                ->get();
            //dd($assignmentcheckDatas);
        } else {
            $assignmentcheckDatas =
                DB::table('financialstatementclassifications')
                ->where('assignment_id', $assignmentid)
                ->where('assignmentgenerate_id', null)
                ->orwhere('assignmentgenerate_id',  $id)
                ->get();
        }

        //  dd($assignmentcheckDatas);

        $assignmentbudgetingDatas = DB::table('assignmentbudgetings')
            ->join('clients', 'clients.id', 'assignmentbudgetings.client_id')
            ->join('assignments', 'assignments.id', 'assignmentbudgetings.assignment_id')
            ->join('assignmentmappings', 'assignmentmappings.assignmentgenerate_id', 'assignmentbudgetings.assignmentgenerate_id')
            ->leftjoin('assignmentteammappings', 'assignmentteammappings.assignmentmapping_id', 'assignmentmappings.id')
            ->where('assignmentbudgetings.assignmentgenerate_id', $id)
            ->select(
                'assignmentbudgetings.*',
                'assignmentmappings.*',
                'clients.client_name',
                'clients.client_code',
                'assignmentteammappings.type',
                'assignments.assignment_name'
            )->first();
        // dd($assignmentbudgetingDatas);
        // $teammemberDatas = DB::table('assignmentmappings')
        //     ->leftjoin('assignmentteammappings', 'assignmentteammappings.assignmentmapping_id', 'assignmentmappings.id')
        //     ->leftjoin('teammembers', 'teammembers.id', 'assignmentteammappings.teammember_id')
        //     ->leftjoin('titles', 'titles.id', 'teammembers.title_id')
        //     ->leftjoin('roles', 'roles.id', 'teammembers.role_id')
        //     ->where('assignmentmappings.assignmentgenerate_id', $id)
        //     ->select('teammembers.*', 'roles.rolename', 'assignmentteammappings.type', 'titles.title', 'assignmentteammappings.id As assignmentteammappingsId', 'assignmentteammappings.status as assignmentteammappingsStatus', 'assignmentmappings.assignmentgenerate_id as assignmentgenerateid', 'assignmentteammappings.teamhour', 'assignmentmappings.leadpartner', 'assignmentteammappings.viewerteam')
        //     ->orderBy('assignmentteammappingsId', 'desc')
        //     ->get();

        $teammemberDatas = DB::table('assignmentmappings')
            ->leftjoin('assignmentteammappings', 'assignmentteammappings.assignmentmapping_id', 'assignmentmappings.id')
            ->leftjoin('teammembers', 'teammembers.id', 'assignmentteammappings.teammember_id')
            ->leftjoin('titles', 'titles.id', 'teammembers.title_id')
            ->leftjoin('roles', 'roles.id', 'teammembers.role_id')
            ->where('assignmentmappings.assignmentgenerate_id', $id)
            ->whereNotNull('assignmentteammappings.id')
            ->select('teammembers.*', 'roles.rolename', 'assignmentteammappings.type', 'titles.title', 'assignmentteammappings.id As assignmentteammappingsId', 'assignmentteammappings.status as assignmentteammappingsStatus', 'assignmentmappings.assignmentgenerate_id as assignmentgenerateid', 'assignmentteammappings.teamhour', 'assignmentmappings.leadpartner', 'assignmentteammappings.viewerteam')
            ->orderBy('assignmentteammappingsId', 'desc')
            ->get();


        // dd($teammemberDatas, 1);
        $contactDatas = DB::table('assignmentbudgetings')
            ->join('clients', 'clients.id', 'assignmentbudgetings.client_id')
            ->join('clientcontacts', 'clientcontacts.client_id', 'clients.id')
            ->where('assignmentbudgetings.assignmentgenerate_id', $id)
            ->select(
                'clientcontacts.*'
            )->get();
        $udinDatas = DB::table('assignmentbudgetingudins')
            ->join('teammembers', 'teammembers.id', 'assignmentbudgetingudins.created_by')
            ->join('roles', 'roles.id', 'teammembers.role_id')
            ->where('assignmentbudgetingudins.assignment_generate_id', $id)
            ->select('teammembers.*', 'assignmentbudgetingudins.udin', 'assignmentbudgetingudins.udindate', 'assignmentbudgetingudins.id as assignmentbudgetingudinsid', 'roles.rolename', 'assignmentbudgetingudins.partner', 'assignmentbudgetingudins.created_at as created')->get();
        // dd($contactDatas);

        $leadpartner = DB::table('assignmentmappings')
            ->join('teammembers as team', 'team.id', 'assignmentmappings.leadpartner')
            ->leftJoin('titles', 'titles.id', '=', 'team.title_id')
            ->where('assignmentmappings.assignmentgenerate_id', $id)
            ->select('team.id', 'team.team_member', 'team.staffcode',  'team.mobile_no', 'team.role_id', 'assignmentmappings.leadpartnerhour', 'titles.title')
            ->get();


        $otherpartner = DB::table('assignmentmappings')
            ->join('teammembers as team', 'team.id', 'assignmentmappings.otherpartner')
            ->leftJoin('titles', 'titles.id', '=', 'team.title_id')
            ->where('assignmentmappings.assignmentgenerate_id', $id)
            ->select('team.id', 'team.team_member', 'team.staffcode', 'team.mobile_no', 'team.role_id', 'assignmentmappings.otherpartnerhour', 'titles.title',)
            ->get();

        $partner = $leadpartner->merge($otherpartner);

        return view('backEnd.viewassignment', compact('partner', 'udinDatas', 'contactDatas', 'teammemberDatas', 'assignmentcheckDatas', 'assignmentbudgetingDatas', 'teammemberall'));
    }





Blade 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\timesheet\myteamindex.blade.php
find text   <div class="table-responsive"> 
replace  <div class="table-responsive"> tag 












################################################################################################################################
Route 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\ApplyleaveController.php


