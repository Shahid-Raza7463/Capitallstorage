Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\TimesheetController.php
replace timesheet_teamlist() function 

  public function timesheet_teamlist()
  {

    if (auth()->user()->role_id == 13) {
      // get all partner
      // dd('hi');
      $partner = Teammember::where('role_id', '=', 13)->where('status', '=', 1)->with('title')
        ->orderBy('team_member', 'asc')->get();

      $get_datess = DB::table('timesheetreport')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetreport.teamid')
        ->leftjoin('teammembers as partners', 'partners.id', 'timesheetreport.partnerid')
        ->where('timesheetreport.partnerid', auth()->user()->teammember_id)
        // ->whereJsonContains('timesheetreport.partnerid', auth()->user()->teammember_id)
        ->select('timesheetreport.*', 'teammembers.team_member', 'teammembers.staffcode', 'partners.team_member as partnername')
        ->latest()->get();

      // For permission
      $permissiontimesheet = DB::table('timesheetreport')
        ->where('timesheetreport.teamid', auth()->user()->teammember_id)
        ->first();
      // dd($get_datess);
    } else {

      $partner = Teammember::where('role_id', '=', 13)->where('status', '=', 1)->with('title')
        ->orderBy('team_member', 'asc')->get();
      $get_datess = DB::table('timesheetreport')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetreport.teamid')
        ->leftjoin('teammembers as partners', 'partners.id', 'timesheetreport.partnerid')
        ->where('timesheetreport.teamid', auth()->user()->teammember_id)
        ->select('timesheetreport.*', 'teammembers.team_member', 'teammembers.staffcode', 'partners.team_member as partnername')
        ->latest()->get();

      // For permission working 
      $permissiontimesheet = DB::table('timesheetreport')
        ->where('timesheetreport.teamid', auth()->user()->teammember_id)
        ->first();
    }

    $groupedData = $get_datess->groupBy(function ($item) {
      return $item->team_member . '|' . $item->week;
    })->map(function ($group) {
      $firstItem = $group->first();

      return (object)[
        'id' => $firstItem->id,
        'teamid' => $firstItem->teamid,
        'week' => $firstItem->week,
        'totaldays' => $group->sum('totaldays'),
        'totaltime' => $group->sum('totaltime'),
        'startdate' => $firstItem->startdate,
        'enddate' => $firstItem->enddate,
        'partnername' => $firstItem->partnername,
        'created_at' => $firstItem->created_at,
        'team_member' => $firstItem->team_member,
        'staffcode' => $firstItem->staffcode,
        'partnerid' => $firstItem->partnerid,
      ];
    });

    $get_date = collect($groupedData->values());


    return view('backEnd.timesheet.myteamindex', compact('get_date', 'partner', 'permissiontimesheet'));
  }



Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\TimesheetController.php
replace allteamsubmitted() function


  public function allteamsubmitted()
  {
    // die;
    $get_datess = DB::table('timesheetreport')
      ->leftjoin('teammembers', 'teammembers.id', 'timesheetreport.teamid')
      ->leftjoin('teammembers as partners', 'partners.id', 'timesheetreport.partnerid')
      // ->where('timesheetreport.teamid', auth()->user()->teammember_id)
      ->select('timesheetreport.*', 'teammembers.team_member', 'teammembers.staffcode', 'partners.team_member as partnername', 'teammembers.emailid')
      ->latest()->get();

    $permissiontimesheet = DB::table('timesheetreport')->first();

    // maping double date ************
    $groupedData = $get_datess->groupBy(function ($item) {
      return $item->team_member . '|' . $item->week;
    })->map(function ($group) {
      $firstItem = $group->first();

      return (object)[
        'id' => $firstItem->id,
        'teamid' => $firstItem->teamid,
        'week' => $firstItem->week,
        'totaldays' => $group->sum('totaldays'),
        'totaltime' => $group->sum('totaltime'),
        'startdate' => $firstItem->startdate,
        'enddate' => $firstItem->enddate,
        'partnername' => $firstItem->partnername,
        'created_at' => $firstItem->created_at,
        'team_member' => $firstItem->team_member,
        'staffcode' => $firstItem->staffcode,
        'partnerid' => $firstItem->partnerid,
      ];
    });

    $get_date = collect($groupedData->values());

    return view('backEnd.timesheet.myteamindex', compact('get_date', 'permissiontimesheet'));
  } 


Blade 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\report\openandcloseassignment.blade.php
find text    $('#examplee').DataTable({
replace  script tag



<script>
    $(document).ready(function() {
        $('#examplee').DataTable({
            dom: 'Bfrtip',
            "order": [
                [1, "asc"]
            ],

            buttons: [

                {
                    extend: 'copyHtml5',
                    exportOptions: {
                        columns: [0, ':visible']
                    }
                },
                {
                    extend: 'excelHtml5',
                    filename: 'Assignment Report List',
                    exportOptions: {
                        columns: ':visible'
                    },
                    customize: function(xlsx) {
                        var sheet = xlsx.xl.worksheets['sheet1.xml'];
                        //   remove extra spaces
                        $('c', sheet).each(function() {
                            var originalText = $(this).find('is t').text();
                            var cleanedText = originalText.replace(/\s+/g, ' ').trim();
                            $(this).find('is t').text(cleanedText);
                        });
                    }
                },
                {
                    extend: 'pdfHtml5',
                    filename: 'Assignment Report List',
                    // which column do you want to on pdf page
                    exportOptions: {
                        columns: [0, 1, 2, 4, 10]
                    },
                  

                },
                // column visibility
                'colvis'
            ]
        });
    });
</script>





Blade 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\timesheetrequest\view.blade.php

find text  <td><b>Approver : </b></td>
replace   <tr> tag 

                                    <tr>
                                        <td style="width: 156px; white-space: nowrap;"><b>Approver : </b></td>
                                        <td>{{ $timesheetrequest->team_member ?? '' }}</td>
                                        <td style="width: 127px; white-space: nowrap;">
                                            <b>Reason : </b>
                                        </td>
                                        <td>{{ $timesheetrequest->reason ?? ('' ?? '') }}
                                        </td>
                                    </tr>


Blade 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\assignmentmapping\form.blade.php

find text   <label class="font-weight-600">Lead Partner *</label>
replace  <div class="form-group">


       <div class="form-group">
            <label class="font-weight-600">Lead Partner *</label>
            <select required class="language form-control" id="category" name="leadpartner"
                @if (Request::is('client/*/edit')) > <option disabled
            style="display:block">Please Select One</option>

            @foreach ($partner as $teammemberData)
            <option value="{{ $teammemberData->id }}"
            @if ($client->leadpartner == $teammemberData->id) selected @endif>
                {{ $teammemberData->team_member }}</option>
                @endforeach
            @else
                <option></option>
                <option value="">Please Select One</option>
                @foreach ($partner as $teammemberData)
                    <option value="{{ $teammemberData->id }}">
                        {{ $teammemberData->team_member }} ( {{ $teammemberData->staffcode }} )</option>

                @endforeach
                @endif
            </select>
        </div>


Blade 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\assignmentlist.blade.php

find text   @foreach ($teammember as $teammemberData) 
replace  @foreach ($teammember as $teammemberData) 


                                        @foreach ($teammember as $teammemberData)
                                            <option value="{{ $teammemberData->id }}">{{ $teammemberData->team_member }}
                                                ({{ $teammemberData->staffcode }})
                                            </option>
                                        @endforeach
										
								