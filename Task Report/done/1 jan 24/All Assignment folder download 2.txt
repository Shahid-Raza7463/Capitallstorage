i have done some improvement in this task 
Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AssignmentfolderfileController.php
replace zipfolderdownload() function  and add s3 connection in this function 


   // All asignment folder download in the zip formate 
    public function zipfolderdownload(Request $request, $assignmentgenerateid)
    {
        // Get All folder data and folder name 
        $assignmentfoldername = DB::table('assignmentfolders')
            ->leftJoin('assignmentfolderfiles', 'assignmentfolderfiles.assignmentfolder_id', 'assignmentfolders.id')
            ->where('assignmentfolders.assignmentgenerateid', $assignmentgenerateid)
            ->select('assignmentfolders.*', 'assignmentfolderfiles.filesname')
            ->get();

        // Set Downloaded folder name 
        $parentZipFileName = $assignmentgenerateid . '.zip';
        $parentZip = new ZipArchive;

        // Open parent zip
        if ($parentZip->open($parentZipFileName, ZipArchive::CREATE) === TRUE) {
            foreach ($assignmentfoldername as $foldername) {
                $folderZipFileName = $foldername->assignmentfoldersname . '.zip';
                $zip = new ZipArchive;

                // Open Child zip
                if ($zip->open($folderZipFileName, ZipArchive::CREATE) === TRUE) {
                    if ($foldername->filesname != null) {
                        // Replace server path hare 
                        $filePath = storage_path('app/public/image/task/' . $foldername->filesname);
                    }

                    if (file_exists($filePath)) {
                        // Add file in folder 
                        $zip->addFile($filePath, $foldername->filesname);
                    }
                    // else {
                    //     return '<h1>File Not Found</h1>';
                    // }
                    $zip->close();
                    $parentZip->addFile($folderZipFileName, $foldername->assignmentfoldersname . '/' . $foldername->filesname);
                }
            }

            $parentZip->close();
        }
        // dd($parentZipFileName);
        // Download the parent zip file
        return response()->download($parentZipFileName)->deleteFileAfterSend(true);
    }


Blade 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\assignmentfolder\index.blade.php
<div class="content-header row align-items-center m-0">
 after this div add php code  


        @php
            // Get All folder data and folder name
            $assignmentfoldername = DB::table('assignmentfolders')
                ->leftJoin('assignmentfolderfiles', 'assignmentfolderfiles.assignmentfolder_id', 'assignmentfolders.id')
                ->where('assignmentfolders.assignmentgenerateid', $assignmentfolderpermission->assignmentgenerate_id)
                ->select('assignmentfolders.*', 'assignmentfolderfiles.filesname', 'assignmentfolderfiles.filesize')
                ->get();
            // Calculate the sum of file sizes in KB
            $totalFileSizeKB = $assignmentfoldername->sum('filesize');
            // Convert totalFileSizeKB to MB
            $totalFileSizeMB = round($totalFileSizeKB / 1024, 2);

            // dd($totalFileSizeKB);

        @endphp



Blade 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\assignmentfolder\index.blade.php
find text <nav aria-label="breadcrumb"
replace  nav tag 


       <nav aria-label="breadcrumb" class="col-sm-4 order-sm-last mb-3 mb-sm-0 p-0 ">
            <ol class="breadcrumb d-inline-flex font-weight-600 fs-13 bg-white mb-0 float-sm-right">

                <li><a class="btn btn-info" href="{{ url('viewassignment/' . $id) }}">Back</a></li>
                @if ($assignmentfolderpermission->status == 1)
                    <li style="margin-left: 13px;"><a class="btn btn-success" style="color:white;" data-toggle="modal"
                            data-target="#exampleModal1">Add Folder</a></li>
                @endif
                @if ($assignmentfolder->isNotEmpty())
                    <li style="margin-left: 13px;">
                        <a href="{{ route('zipfolder', ['assignmentgenerateid' => $assignmentfolderpermission->assignmentgenerate_id]) }}"
                            class="btn btn-secondary"
                            onclick="return confirm('Are you sure you want to download all folders, Total Size is {{ $totalFileSizeMB > 1024 ? round($totalFileSizeMB / 1024, 2) . ' GB' : $totalFileSizeMB . ' MB' }}?');"
                            style="color:white;">Download Folder</a>
                    </li>
                @endif
            </ol>
        </nav>






