Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\TimesheetController.php
replace adminsearchtimesheet() function 


  public function adminsearchtimesheet(Request $request)
  {
    // dd($request, 'hi2');
    // Get all input from form
    $startDate = $request->input('startdate', null);
    $endDate = $request->input('enddate', null);
    $teamId = $request->input('teamid', null);
    $teammemberId = $request->input('teammemberId', null);
    $year = $request->input('year', null);
    $clientId = $request->input('clientId', null);
    $assignmentId = $request->input('assignmentId', null);

    $teammembers = DB::table('teammembers')
      ->where('status', 1)
      ->whereIn('role_id', [14, 15, 13, 11])
      ->select('team_member', 'id', 'staffcode')
      ->orderBy('team_member', 'ASC')
      ->get();

    $clientsname = DB::table('clients')
      ->whereIn('status', [0, 1])
      ->select('id', 'client_name', 'client_code')
      ->orderBy('client_name', 'ASC')
      ->get();

    $assignmentsname = DB::table('assignments')
      ->where('status', 1)
      ->select('id', 'assignment_name')
      ->orderBy('assignment_name', 'ASC')
      ->get();

    if (auth()->user()->role_id == 11 || auth()->user()->role_id == 13) {
      $timesheetData = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        // When startDate and endDate exist then run 'when' clause
        ->when($startDate && $endDate && $teammemberId && $year, function ($query) use ($startDate, $endDate, $teammemberId) {
          // dd('teammemberId');
          return $query->where('timesheetusers.createdby', $teammemberId)
            ->where('timesheetusers.date', '>=', $startDate)
            ->where('timesheetusers.date', '<=', $endDate);
        })
        ->when($startDate && $endDate && $clientId && $year, function ($query) use ($startDate, $endDate, $clientId) {
          // dd($clientId);
          return $query->where('timesheetusers.client_id', $clientId)
            ->where('timesheetusers.date', '>=', $startDate)
            ->where('timesheetusers.date', '<=', $endDate);
        })
        ->when($startDate && $endDate && $assignmentId && $year, function ($query) use ($startDate, $endDate, $assignmentId) {
          // dd('assignmentId');
          return $query->where('timesheetusers.assignment_id', $assignmentId)
            ->where('timesheetusers.date', '>=', $startDate)
            ->where('timesheetusers.date', '<=', $endDate);
        })
        ->when($startDate && $endDate && $year && $teammemberId == null && $clientId == null && $assignmentId == null, function ($query) use ($startDate, $endDate, $year) {
          // dd('year');
          return $query->where('timesheetusers.date', '>=', $startDate)
            ->where('timesheetusers.date', '<=', $endDate);
        })
        ->whereIn('timesheetusers.status', [1, 2, 3])
        ->leftjoin('clients', 'clients.id', 'timesheetusers.client_id')
        ->leftjoin('assignments', 'assignments.id', 'timesheetusers.assignment_id')
        ->leftjoin('teammembers as patnerid', 'patnerid.id', 'timesheetusers.partner')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'timesheetusers.assignmentgenerate_id')
        ->select('timesheetusers.*', 'assignments.assignment_name', 'clients.client_name', 'teammembers.team_member', 'teammembers.staffcode', 'patnerid.team_member as patnername', 'assignmentbudgetings.assignmentname')
        ->orderBy('date', 'DESC')
        ->get();

      $request->flash();
      return view('backEnd.timesheet.timesheetdownload', compact('timesheetData', 'teammembers', 'clientsname', 'assignmentsname'));
    }
  }



Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\TimesheetController.php
replace searchingtimesheet() function 



  public function searchingtimesheet(Request $request)
  {
    // Get all input from form
    $startDate = $request->input('startdate', null);
    $endDate = $request->input('enddate', null);
    $teamId = $request->input('teamid', null);
    $teammemberId = $request->input('teammemberId', null);
    $year = $request->input('year', null);

    $teammembers = DB::table('teammembers')
      ->where('status', 1)
      ->whereIn('role_id', [14, 15, 13, 11])
      ->select('team_member', 'id', 'staffcode')
      ->orderBy('team_member', 'ASC')
      ->get();

    // For patner
    if (auth()->user()->role_id == 13) {
      $query = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->whereIn('timesheetusers.status', [1, 2, 3])
        ->leftjoin('clients', 'clients.id', 'timesheetusers.client_id')
        ->leftjoin('assignments', 'assignments.id', 'timesheetusers.assignment_id')
        ->leftjoin('teammembers as patnerid', 'patnerid.id', 'timesheetusers.partner')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'timesheetusers.assignmentgenerate_id')
        ->select('timesheetusers.*', 'assignments.assignment_name', 'clients.client_name', 'teammembers.team_member', 'patnerid.team_member as patnername', 'assignmentbudgetings.assignmentname')
        ->orderBy('date', 'DESC');

      if ($startDate && $endDate && $teamId) {
        $query->where(function ($q) use ($startDate, $endDate, $teamId) {
          $q->where('timesheetusers.createdby', $teamId)
            ->where('timesheetusers.date', '>=', $startDate)
            ->where('timesheetusers.date', '<=', $endDate);
        });
      }

      $timesheetData = $query->get();
      // dd($timesheetData);
      $request->flash();
      return view('backEnd.timesheet.timesheetdownload', compact('timesheetData'));
    }
    // For staff and manager
    else {

      $query = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->whereIn('timesheetusers.status', [1, 2, 3])
        ->leftjoin('clients', 'clients.id', 'timesheetusers.client_id')
        ->leftjoin('assignments', 'assignments.id', 'timesheetusers.assignment_id')
        ->leftjoin('teammembers as patnerid', 'patnerid.id', 'timesheetusers.partner')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'timesheetusers.assignmentgenerate_id')
        ->select('timesheetusers.*', 'assignments.assignment_name', 'clients.client_name', 'teammembers.team_member', 'patnerid.team_member as patnername', 'assignmentbudgetings.assignmentname')
        ->orderBy('date', 'DESC');

      if ($startDate && $endDate && $teamId) {
        $query->where(function ($q) use ($startDate, $endDate, $teamId) {
          $q->where('timesheetusers.createdby', $teamId)
            ->where('timesheetusers.date', '>=', $startDate)
            ->where('timesheetusers.date', '<=', $endDate);
        });
      }
      $timesheetData = $query->get();
      // dd($timesheetData);

      $request->flash();
      return view('backEnd.timesheet.timesheetdownload', compact('timesheetData'));
    }
  }



Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\TimesheetController.php
replace mytimesheetlist() function 


  public function mytimesheetlist(Request $request, $teamid)
  {
    // dd($teamid);
    if (auth()->user()->role_id == 13) {

      $date = DB::table('timesheetreport')->where('id', $request->id)->first();
      $timesheetData = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->where('timesheetusers.createdby', $teamid)
        ->whereIn('timesheetusers.status', [1, 2, 3])
        ->leftjoin('clients', 'clients.id', 'timesheetusers.client_id')
        ->leftjoin('assignments', 'assignments.id', 'timesheetusers.assignment_id')
        ->leftjoin('teammembers as patnerid', 'patnerid.id', 'timesheetusers.partner')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'timesheetusers.assignmentgenerate_id')
        ->select('timesheetusers.*', 'assignments.assignment_name', 'clients.client_name', 'teammembers.team_member', 'patnerid.team_member as patnername', 'assignmentbudgetings.assignmentname')
        ->orderBy('date', 'DESC')
        ->take(7)
        ->get();

      // dd($timesheetData);
    } else {
      $date = DB::table('timesheetreport')->where('id', $request->id)->first();
      $timesheetData = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->where('timesheetusers.createdby', $teamid)
        ->whereIn('timesheetusers.status', [1, 2, 3])
        ->leftjoin('clients', 'clients.id', 'timesheetusers.client_id')
        ->leftjoin('assignments', 'assignments.id', 'timesheetusers.assignment_id')
        ->leftjoin('teammembers as patnerid', 'patnerid.id', 'timesheetusers.partner')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'timesheetusers.assignmentgenerate_id')
        ->select('timesheetusers.*', 'assignments.assignment_name', 'clients.client_name', 'teammembers.team_member', 'patnerid.team_member as patnername', 'assignmentbudgetings.assignmentname')
        ->orderBy('date', 'DESC')
        ->take(7)
        ->get();

      // dd($timesheetData);
    }
    return view('backEnd.timesheet.timesheetdownload', compact('timesheetData'));
  }




Blade 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\timesheet\timesheetdownload.blade.php
find text   @foreach ($timesheetData as $timesheetDatas) 

replace   @foreach ($timesheetData as $timesheetDatas)


                                  @foreach ($timesheetData as $timesheetDatas)
                                      <tr>
                                          <td style="display: none;">{{ $timesheetDatas->id }}</td>
                                          <td> {{ $timesheetDatas->team_member ?? '' }} </td>
                                          @if (Request::is('adminsearchtimesheet'))
                                              <td> {{ $timesheetDatas->staffcode ?? '' }} </td>
                                          @endif
                                          <td> <span style="display: none;">
                                                  {{ date('Y-m-d', strtotime($timesheetDatas->date)) }}</span>{{ date('d-m-Y', strtotime($timesheetDatas->date)) }}
                                          </td>
                                          <td>
                                              @if ($timesheetDatas->date != null)
                                                  {{ date('l', strtotime($timesheetDatas->date)) }}
                                              @endif
                                          </td>
                                          <td>{{ $timesheetDatas->client_name ?? '' }} </td>
                                          <td>
                                              {{ $timesheetDatas->assignment_name ?? '' }}
                                              @if ($timesheetDatas->assignmentname != null)
                                                  ({{ $timesheetDatas->assignmentname ?? '' }})
                                              @endif
                                          </td>
                                          <td> {{ $timesheetDatas->workitem ?? '' }}</td>
                                          <td>{{ $timesheetDatas->location ?? '' }} </td>
                                          <td> {{ $timesheetDatas->patnername ?? '' }} </td>
                                          <td>{{ $timesheetDatas->hour ?? '' }}</td>
                                      </tr>
                                  @endforeach





Blade 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\timesheet\timesheetdownload.blade.php
find text   $('#examplee').DataTable({

replace script  tag 

 <script>
      $(document).ready(function() {
          $('#examplee').DataTable({
              dom: 'Bfrtip',
              "order": [],
              searching: false,
              @if (Auth::user()->role_id == 11 ||
                      Request::is('adminsearchtimesheet') ||
                      (Auth::user()->role_id == 13 && Request::is('admintimesheetlist')))
                  columnDefs: [{
                      targets: [1, 2, 4, 5, 6, 7, 8, 9],
                      orderable: false
                  }],
              @else
                  columnDefs: [{
                      targets: [1, 3, 4, 5, 6, 7, 8, 9],
                      orderable: false
                  }],
              @endif
              buttons: [{
                      extend: 'excelHtml5',
                      filename: 'Timesheet_Download',

                      //   remove extra date from column
                      exportOptions: {
                          columns: ':visible',
                          format: {
                              body: function(data, row, column, node) {
                                  // it should be column number 2
                                  if (column === 2) {
                                      // If the data is a date, extract the date without HTML tags
                                      var cleanedText = $(data).text().trim();
                                      var dateParts = cleanedText.split(
                                          '-');
                                      // Assuming the date format is yyyy-mm-dd
                                      if (dateParts.length === 3) {
                                          return dateParts[2] + '-' + dateParts[1] + '-' +
                                              dateParts[0];
                                      }
                                  }
                                  return data;
                              }
                          }
                      },

                      //   set width in excell
                      customize: function(xlsx) {
                          var sheet = xlsx.xl.worksheets['sheet1.xml'];

                          // set column width
                          $('col', sheet).eq(0).attr('width', 15);
                          $('col', sheet).eq(1).attr('width', 15);
                          $('col', sheet).eq(3).attr('width', 30);
                          $('col', sheet).eq(4).attr('width', 30);
                          $('col', sheet).eq(5).attr('width', 30);
                          $('col', sheet).eq(6).attr('width', 30);
                          $('col', sheet).eq(7).attr('width', 30);

                          // remove extra spaces
                          $('c', sheet).each(function() {
                              var originalText = $(this).find('is t').text();
                              var cleanedText = originalText.replace(/\s+/g, ' ').trim();
                              $(this).find('is t').text(cleanedText);
                          });
                      }
                  },
                  'colvis'
              ]
          });
      });
  </script>






