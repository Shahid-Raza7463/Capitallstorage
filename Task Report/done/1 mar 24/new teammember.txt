Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\ChecklistanswerController.php
replace teammappingUpdate() function 


   public function teammappingUpdate(Request $request)
    {
        try {
            $data = $request->except(['_token']);
            $previouscheck = DB::table('assignmentteammappings')
                ->where('assignmentmapping_id', $request->assignmentmapping_id)
                ->where('teammember_id', $request->teammember_id)
                ->first();
            if ($previouscheck != null) {
                $output = array('msg' => 'staff is already in team');
                return back()->with('success', $output);
            }
            Assignmentteammapping::Create($data);
            if ($previouscheck == null) {

                $assignmentmappingid = DB::table('assignmentmappings')->where('id', $request->assignmentmapping_id)->first();

                $assignment_name = DB::table('assignments')->where('id', $assignmentmappingid->assignment_id)
                    ->select('assignment_name')->pluck('assignment_name')->first();


                $assignmentbudgetingid = DB::table('assignmentbudgetings')
                    ->where('assignmentgenerate_id', $assignmentmappingid->assignmentgenerate_id)->first();

                $clientname = DB::table('clients')->where('id', $assignmentbudgetingid->client_id)->select('client_name', 'client_code')->first();

                $assignmentnames = DB::table('assignmentbudgetings')->where('assignmentgenerate_id', $assignmentmappingid->assignmentgenerate_id)
                    ->select('assignmentname')->first();
                $teamemail = DB::table('teammembers')->where('id', $request->teammember_id)->select('emailid')->first();

                $assignmentpartner = DB::table('teammembers')->where('id', $assignmentmappingid->leadpartner)->select('team_member', 'staffcode')->first();
                $assignmentotherpatner = DB::table('teammembers')->where('id', $assignmentmappingid->otherpartner)->select('team_member', 'staffcode')->first();
                $teamleader =    DB::table('assignmentmappings')
                    ->leftjoin('assignmentteammappings', 'assignmentteammappings.assignmentmapping_id', 'assignmentmappings.id')
                    ->leftjoin('teammembers', 'teammembers.id', 'assignmentteammappings.teammember_id')
                    ->where('assignmentmappings.assignmentgenerate_id', $assignmentmappingid->assignmentgenerate_id)
                    // ->where('assignmentteammappings.type', '0')
                    ->select('teammembers.team_member', 'teammembers.staffcode')
                    ->get();

                $data = array(
                    'assignmentid' =>  $assignmentmappingid->assignmentgenerate_id,
                    'clientname' =>  $clientname->client_name,
                    'clientcode' =>  $clientname->client_code,
                    'assignmentname' =>  $assignmentnames->assignmentname,
                    'emailid' =>  $teamemail->emailid,
                    'assignment_name' =>  $assignment_name,
                    'assignmentpartner' =>  $assignmentpartner,
                    'otherpartner' =>  $assignmentotherpatner,
                    'teamleader' =>  $teamleader,
                );
                Mail::send('emails.assignmentassignteam', $data, function ($msg) use ($data) {
                    $msg->to($data['emailid']);
                    $msg->subject('VSA New Assignment Assigned || ' . $data['assignmentname'] . ' / ' . $data['assignmentid']);
                });
            }

            $output = array('msg' => 'Team Add Successfully');
            return back()->with('success', $output);
        } catch (Exception $e) {
            DB::rollBack();
            Log::emergency("File:" . $e->getFile() . "Line:" . $e->getLine() . "Message:" . $e->getMessage());
            report($e);
            $output = array('msg' => $e->getMessage());
            return back()->withErrors($output)->withInput();
        }
    }





Blade 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\emails\assignmentassignteam.blade.php
replace  all code 

<h3>
    Dear Sir/Madam</h3>
<br><br>
<p>You have been assigned a new assignment . Please click <a href="{{ url('assignmentmapping') }}">here</a> to check</p>
<p>Assignment Name : {{ $assignment_name }} ({{ $assignmentname }}) ({{ $assignmentid }})</p>
<p>Client Name : {{ $clientname ?? '' }}</p>
<p>Client Code : {{ $clientcode ?? '' }}</p>
<p>Assignment Partner : {{ $assignmentpartner->team_member ?? '' }} ({{ $assignmentpartner->staffcode ?? '' }})</p>
<p>Other Partner : {{ $otherpartner->team_member ?? 'N/A' }}
    @if ($otherpartner != null)
        ({{ $otherpartner->staffcode ?? '' }})
    @endif
</p>
<p>Team:
    @foreach ($teamleader as $teamleaderDatas)
        {{ $teamleaderDatas->team_member ?? '' }} ({{ $teamleaderDatas->staffcode ?? '' }}),
    @endforeach
</p>


Blade 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\emails\assignmentassignteam.blade.php
find text  Team Leader

remove leader client want to show only Team:








