Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AssignmentconfirmationController.php
replace confirmationAccept() function 

    public function confirmationAccept(Request $request)
    {
        $clientid = $request->clientid;
        $debtorid = $request->debtorid;
        $yes = $request->yes;
        $no = $request->no;
        $templatetype = $request->type;
        // $template = DB::table('templates')->where('type', $templatetype)->first();
        $maildatas = DB::table('templates')->where('assignmentgenerate_id', $clientid)
            ->where('type', $templatetype)->first();
        if ($maildatas ==  null) {
            $template =  DB::table('templates')->where('type', $templatetype)->first();
        } else {
            $template = DB::table('templates')->where('assignmentgenerate_id', $clientid)
                ->where('type', $templatetype)->first();
        }

        $debtors = DB::table('debtors')
            ->where('id', $debtorid)->where('type', $request->type)
            ->first();
        $des = $template->description;
        $healthy = ["[name]", "[amount]", "[year]", "[date]", "[address]", "[entityname]"];
        $yummy   = ["$debtors->name", "$debtors->amount", "$debtors->year", "$debtors->date", "$debtors->address", "$debtors->entityname"];
        $description = str_replace($healthy, $yummy, $des);

        $confirmation = DB::table('debtors')->where('id', $debtorid)->first();
        if ($confirmation->amounthidestatus == 1) {
            return view('backEnd.assignmentconfirmationaccept', compact('clientid', 'debtorid', 'yes', 'no', 'debtors', 'description'));
        } else {
            return view('backEnd.assignmentconfirmationamounthide', compact('clientid', 'debtorid', 'yes', 'no', 'debtors', 'description'));
        }
    }



222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
update template for creditor



To  [name]

Dear Sir/Ma’am,



We, Webloop , have been authorized video letter dated [date] by M/s ABC Pvt Ltd (hereinafter referred to as “TEV”) to obtain Statement of Accounts / Balance Confirmation from its customers/vendors.

Your outstanding balance in the books of TEV is Rs. [amount]. We request you to confirm the said balance as on [date] and in case of any mismatch, please indicate the balance in your books giving details of the difference amount or the invoices outstanding.

In case no reply is received within the below mentioned date, it will deem to be considered that the balance in the books of TEV is correct.

We would appreciate your prompt response or your reply before [date] and thank you in advance for your kind co-operation.


222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
update template for bank confirmation


To  [name]

Dear Sir/Ma’am,



We, Webloop , have been authorized video letter dated [date] by M/s ABC  Pvt Ltd (hereinafter referred to as “TEV”) to obtain Statement of Accounts / Balance Confirmation from its customers/vendors.

Your outstanding balance in the books of TEV is Rs. [amount]. We request you to confirm the said balance as on [date] and in case of any mismatch, please indicate the balance in your books giving details of the difference amount or the invoices outstanding.

In case no reply is received within the below mentioned date, it will deem to be considered that the balance in the books of TEV is correct.

We would appreciate your prompt response or your reply before [date] and thank you in advance for your kind co-operation.



Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AssignmentconfirmationController.php
replace confirmationstatus() function 

    public function confirmationstatus(Request $request)
    {
        try {
            $assignmentcheck = DB::table('assignmentbudgetings')
                ->where('assignmentgenerate_id', $request->assignmentid)
                ->first();
            if ($assignmentcheck->status == 0) {
                return response()->json(
                    [
                        'success' => true,
                        'assignmentclosed' => 2,
                    ]
                );
            }

            DB::table('assignmentbudgetings')
                ->where('assignmentgenerate_id', $request->assignmentid)->update([
                    'balanceconfirmationstatus' =>  $request->status,
                ]);
            return response()->json(
                [
                    'success' => true,
                    'status' => $request->status,
                ]
            );
        } catch (Exception $e) {
            DB::rollBack();
            Log::emergency("File:" . $e->getFile() . "Line:" . $e->getLine() . "Message:" . $e->getMessage());
            report($e);
            $output = array('msg' => $e->getMessage());
            return back()->withErrors($output)->withInput();
        }
    }


Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AssignmentconfirmationController.php
replace confirmationAccept() function 


Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AssignmentconfirmationController.php
replace confirmationAccept() function 


Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AssignmentconfirmationController.php
replace confirmationAccept() function 



Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AssignmentconfirmationController.php
replace confirmationAccept() function 



Blade 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\assignmentconfirmation\index.blade.php
find text    function updateConfirmationStatus(checkbox) {
replace    <script> tag 


  <script>
      function updateConfirmationStatus(checkbox) {
          var assignmentId = "{{ $clientList->assignmentgenerate_id }}";
          var status = checkbox.checked ? 1 : 0;

          $.ajax({
              url: "{{ url('/confirmationstatus') }}",
              type: 'GET',
              data: {
                  assignmentid: assignmentId,
                  status: status
              },
              success: function(response) {
                  if (response.status) {
                      console.log(response);
                      var message = response.status == 1 ? 'Your balance confirmation has been opened.' :
                          'Your balance confirmation has been closed.';
                      $('#successmessage').find('p').text(message);
                      $('#successmessage').show();
                      $('#successmessage').delay(5000).fadeOut(400);
                      if (response.status == 1) {
                          $('#sendButton, #uploadButton, #sendButtons, #uploadButtons, #sendButtonss, #uploadButtonss')
                              .removeClass('disabled');
                          $('.hide-on-closed').show();
                      } else {
                          $('#sendButton, #uploadButton, #sendButtons, #uploadButtons, #sendButtonss, #uploadButtonss')
                              .addClass('disabled');
                          $('.hide-on-closed').hide();
                      }
                  } else {
                      console.log(response);
                      var message = 'Your assignment is closed, so you cannot open the balance confirmation.';
                      //   $('#successmessage').find('p').text(message);
                      $('#successmessage').find('p').text(message).addClass('text-danger');
                      $('#successmessage').show();
                      $('#successmessage').delay(5000).fadeOut(400);
                  }
              },
              error: function(xhr, status, error) {
                  // Handle error response if needed
                  console.error(xhr.responseText);
              }
          });
      }
  </script>



################################################################################################################################
Route 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222














