task name notification read or unread
testing on sunny gupta , admin and bhashker 

Controller2222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\NotificationController.php
replace index() function 



public function index()
    {
        if (auth()->user()->role_id == 11 || auth()->user()->role_id == 18) {
            $userId = auth()->user()->teammember_id;
            $notificationDatas = DB::table('notifications')
                ->leftjoin('notificationreadorunread', function ($join) use ($userId) {
                    $join->on('notificationreadorunread.notifications_id', 'notifications.id')
                        ->where('notificationreadorunread.readedby', $userId);
                })
                ->select('notifications.*', 'notificationreadorunread.status as readstatus')
                ->latest()
                ->paginate(20);
            return view('backEnd.notification.index', compact('notificationDatas'));
        } elseif (auth()->user()->role_id == 13) {

            $userId = auth()->user()->teammember_id;

            $notificationDatas = DB::table('notifications')
                ->leftjoin('teammembers', 'teammembers.id', 'notifications.created_by')
                ->leftjoin('notificationtargets', 'notificationtargets.notification_id', 'notifications.id')
                ->leftjoin('notificationreadorunread', function ($join) use ($userId) {
                    $join->on('notificationreadorunread.notifications_id', 'notifications.id')
                        ->where('notificationreadorunread.readedby', $userId);
                })
                ->Where(function ($query) {
                    $query->where('targettype', '3')->orWhere('targettype', '2');
                })
                ->orWhere(function ($query) use ($userId) {
                    $query->where('notificationtargets.teammember_id', $userId)
                        ->where('notificationreadorunread.readedby', $userId);
                })
                ->select('notifications.*', 'notificationreadorunread.status as readstatus')
                ->latest()
                ->get();
            // dd($notificationDatas);
            return view('backEnd.notification.index', compact('notificationDatas'));
        } elseif (auth()->user()->role_id == 14) {
            $userId = auth()->user()->teammember_id;

            $notificationDatas = DB::table('notifications')
                ->leftjoin('teammembers', 'teammembers.id', 'notifications.created_by')
                ->leftjoin('notificationtargets', 'notificationtargets.notification_id', 'notifications.id')
                ->leftjoin('notificationreadorunread', function ($join) use ($userId) {
                    $join->on('notificationreadorunread.notifications_id', 'notifications.id')
                        ->where('notificationreadorunread.readedby', $userId);
                })
                ->where(function ($query) use ($userId) {
                    $query->where('targettype', '4')
                        ->orWhere('targettype', '2')
                        ->orWhere(function ($innerQuery) use ($userId) {
                            $innerQuery->where('notificationtargets.teammember_id', $userId);
                        });
                })
                ->select('notifications.*', 'notificationreadorunread.status as readstatus')
                ->get();

            return view('backEnd.notification.index', compact('notificationDatas'));
        } elseif (auth()->user()->role_id == 15) {
            $userId = auth()->user()->teammember_id;

            $notificationDatas = DB::table('notifications')
                ->leftjoin('teammembers', 'teammembers.id', 'notifications.created_by')
                ->leftjoin('notificationtargets', 'notificationtargets.notification_id', 'notifications.id')
                ->leftjoin('notificationreadorunread', function ($join) use ($userId) {
                    $join->on('notificationreadorunread.notifications_id', 'notifications.id')
                        ->where('notificationreadorunread.readedby', $userId);
                })
                ->where(function ($query) use ($userId) {
                    $query->where('targettype', '5')
                        ->orWhere('targettype', '2')
                        ->orWhere(function ($innerQuery) use ($userId) {
                            $innerQuery->where('notificationtargets.teammember_id', $userId);
                        });
                })
                ->select('notifications.*', 'notificationreadorunread.status as readstatus')
                ->get();

            return view('backEnd.notification.index', compact('notificationDatas'));
        } elseif (auth()->user()->role_id == 16) {
            $userId = auth()->user()->teammember_id;

            $notificationDatas = DB::table('notifications')
                ->leftjoin('teammembers', 'teammembers.id', 'notifications.created_by')
                ->leftjoin('notificationtargets', 'notificationtargets.notification_id', 'notifications.id')
                ->leftjoin('notificationreadorunread', function ($join) use ($userId) {
                    $join->on('notificationreadorunread.notifications_id', 'notifications.id')
                        ->where('notificationreadorunread.readedby', $userId);
                })
                ->where(function ($query) use ($userId) {
                    $query->where('targettype', '6')
                        ->orWhere('targettype', '2')
                        ->orWhere(function ($innerQuery) use ($userId) {
                            $innerQuery->where('notificationtargets.teammember_id', $userId);
                        });
                })
                ->select('notifications.*', 'notificationreadorunread.status as readstatus')
                ->get();

            return view('backEnd.notification.index', compact('notificationDatas'));
        } elseif (auth()->user()->role_id == 17) {
            $userId = auth()->user()->teammember_id;

            $notificationDatas = DB::table('notifications')
                ->leftjoin('teammembers', 'teammembers.id', 'notifications.created_by')
                ->leftjoin('notificationtargets', 'notificationtargets.notification_id', 'notifications.id')
                ->leftjoin('notificationreadorunread', function ($join) use ($userId) {
                    $join->on('notificationreadorunread.notifications_id', 'notifications.id')
                        ->where('notificationreadorunread.readedby', $userId);
                })
                ->where(function ($query) use ($userId) {
                    $query->where('targettype', '7')
                        ->orWhere('targettype', '2')
                        ->orWhere(function ($innerQuery) use ($userId) {
                            $innerQuery->where('notificationtargets.teammember_id', $userId);
                        });
                })
                ->select('notifications.*', 'notificationreadorunread.status as readstatus')
                ->get();

            return view('backEnd.notification.index', compact('notificationDatas'));
        } else {
            $userId = auth()->user()->teammember_id;

            $notificationDatas = DB::table('notifications')
                ->leftjoin('teammembers', 'teammembers.id', 'notifications.created_by')
                ->leftjoin('notificationtargets', 'notificationtargets.notification_id', 'notifications.id')
                ->leftjoin('notificationreadorunread', function ($join) use ($userId) {
                    $join->on('notificationreadorunread.notifications_id', 'notifications.id')
                        ->where('notificationreadorunread.readedby', $userId);
                })
                ->where(function ($query) use ($userId) {
                    $query->where('notifications.targettype', '2')
                        ->orWhere('notificationtargets.teammember_id', $userId);
                })
                ->select('notifications.*', 'teammembers.team_member', 'teammembers.profilepic', 'notificationreadorunread.status as readstatus')
                ->get();

            return view('backEnd.notification.index', compact('notificationDatas'));
        }
    }

######################################################################################################################
app\Http\Controllers\NotificationController.php
replace show() function 


 public function show($id)
    {
        $notificationData =  DB::table('notifications')
            ->where('id', $id)->first();

        // notification read or unread functionality
        DB::table('notificationreadorunread')->insert([
            'notifications_id'   =>   $id,
            'readedby'   =>  auth()->user()->teammember_id,
            'status'   =>   1,
            'created_at' => now(),
            'updated_at' => now(),
        ]);

        return view('backEnd.notification.view', compact('notificationData'));
    }


######################################################################################################################


blade2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
resources\views\backEnd\notification\index.blade.php
find <th>Title</th> and replace table tag 


<table class="table display table-bordered table-striped table-hover ">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Date</th>
                                @if (Auth::user()->role_id == 18 || Auth::user()->role_id == 11)
                                    <th>Target</th>
                                @endif
                            </tr>
                        </thead>
                        <tbody>
                            @foreach ($notificationDatas as $notificationData)
                                <tr>
                                    <td>
                                        <a href="{{ url('/notification/' . $notificationData->id) }}"
                                            style="color: {{ $notificationData->readstatus == 1 ? 'Black' : 'red' }}">
                                            {{ $notificationData->title }}
                                        </a>
                                    </td>
                                    <td>{{ date('F d, Y', strtotime($notificationData->created_at)) }}</td>
                                    @if (Auth::user()->role_id == 18 || Auth::user()->role_id == 11)
                                        <td>
                                            @if ($notificationData->targettype == 1)
                                                <span>Individual</span>
                                            @elseif($notificationData->targettype == 2)
                                                <span>All Member</span>
                                            @else
                                                <span>Partner</span>
                                            @endif
                                        </td>
                                    @endif
                                </tr>
                            @endforeach
                        </tbody>
                    </table>

######################################################################################################################
resources\views\backEnd\layouts\includes\header.blade.php
find auth()->user()->role_id == 11 || auth()->user()->role_id == 18 and replace all @php body @endphp



 @php
                if (auth()->user()->role_id == 11 || auth()->user()->role_id == 18) {
    
                    $userId = auth()->user()->teammember_id;
                    $clientnotification = DB::table('notifications')
                        ->leftjoin('notificationreadorunread', function ($join) use ($userId) {
                            $join->on('notificationreadorunread.notifications_id', 'notifications.id')->where('notificationreadorunread.readedby', $userId);
                        })

                        ->select('notifications.*', 'notificationreadorunread.status as readstatus')
                        ->latest()
                        ->paginate(10);
                } elseif (auth()->user()->role_id == 13) {
                    $userId = auth()->user()->teammember_id;

                    $clientnotification = DB::table('notifications')
                        ->leftjoin('teammembers', 'teammembers.id', 'notifications.created_by')
                        ->leftjoin('notificationtargets', 'notificationtargets.notification_id', 'notifications.id')
                        ->leftjoin('notificationreadorunread', function ($join) use ($userId) {
                            $join->on('notificationreadorunread.notifications_id', 'notifications.id')->where('notificationreadorunread.readedby', $userId);
                        })
                        ->Where(function ($query) {
                            $query->where('targettype', '3')->orWhere('targettype', '2');
                        })
                        ->orWhere(function ($query) use ($userId) {
                            $query->where('notificationtargets.teammember_id', $userId)->where('notificationreadorunread.readedby', $userId);
                        })
                        ->select('notifications.*', 'notificationreadorunread.status as readstatus')
                        ->latest()
                        ->get();
                } elseif (auth()->user()->role_id == 14) {
                
                    $userId = auth()->user()->teammember_id;

                    $clientnotification = DB::table('notifications')
                        ->leftjoin('teammembers', 'teammembers.id', 'notifications.created_by')
                        ->leftjoin('notificationtargets', 'notificationtargets.notification_id', 'notifications.id')
                        ->leftjoin('notificationreadorunread', function ($join) use ($userId) {
                            $join->on('notificationreadorunread.notifications_id', 'notifications.id')->where('notificationreadorunread.readedby', $userId);
                        })
                        ->where(function ($query) use ($userId) {
                            $query
                                ->where('targettype', '4')
                                ->orWhere('targettype', '2')
                                ->orWhere(function ($innerQuery) use ($userId) {
                                    $innerQuery->where('notificationtargets.teammember_id', $userId);
                                });
                        })
                        ->select('notifications.*', 'notificationreadorunread.status as readstatus')
                        ->latest()
                        ->get();
                } elseif (auth()->user()->role_id == 15) {
                    $userId = auth()->user()->teammember_id;

                    $clientnotification = DB::table('notifications')
                        ->leftjoin('teammembers', 'teammembers.id', 'notifications.created_by')
                        ->leftjoin('notificationtargets', 'notificationtargets.notification_id', 'notifications.id')
                        ->leftjoin('notificationreadorunread', function ($join) use ($userId) {
                            $join->on('notificationreadorunread.notifications_id', 'notifications.id')->where('notificationreadorunread.readedby', $userId);
                        })
                        ->where(function ($query) use ($userId) {
                            $query
                                ->where('targettype', '5')
                                ->orWhere('targettype', '2')
                                ->orWhere(function ($innerQuery) use ($userId) {
                                    $innerQuery->where('notificationtargets.teammember_id', $userId);
                                });
                        })
                        ->select('notifications.*', 'notificationreadorunread.status as readstatus')
                        ->latest()
                        ->get();
                } elseif (auth()->user()->role_id == 16) {

                    $userId = auth()->user()->teammember_id;

                    $clientnotification = DB::table('notifications')
                        ->leftjoin('teammembers', 'teammembers.id', 'notifications.created_by')
                        ->leftjoin('notificationtargets', 'notificationtargets.notification_id', 'notifications.id')
                        ->leftjoin('notificationreadorunread', function ($join) use ($userId) {
                            $join->on('notificationreadorunread.notifications_id', 'notifications.id')->where('notificationreadorunread.readedby', $userId);
                        })
                        ->where(function ($query) use ($userId) {
                            $query
                                ->where('targettype', '6')
                                ->orWhere('targettype', '2')
                                ->orWhere(function ($innerQuery) use ($userId) {
                                    $innerQuery->where('notificationtargets.teammember_id', $userId);
                                });
                        })
                        ->select('notifications.*', 'notificationreadorunread.status as readstatus')
                        ->latest()
                        ->get();
                } elseif (auth()->user()->role_id == 17) {
                    $userId = auth()->user()->teammember_id;

                    $clientnotification = DB::table('notifications')
                        ->leftjoin('teammembers', 'teammembers.id', 'notifications.created_by')
                        ->leftjoin('notificationtargets', 'notificationtargets.notification_id', 'notifications.id')
                        ->leftjoin('notificationreadorunread', function ($join) use ($userId) {
                            $join->on('notificationreadorunread.notifications_id', 'notifications.id')->where('notificationreadorunread.readedby', $userId);
                        })
                        ->where(function ($query) use ($userId) {
                            $query
                                ->where('targettype', '7')
                                ->orWhere('targettype', '2')
                                ->orWhere(function ($innerQuery) use ($userId) {
                                    $innerQuery->where('notificationtargets.teammember_id', $userId);
                                });
                        })
                        ->select('notifications.*', 'notificationreadorunread.status as readstatus')
                        ->latest()
                        ->get();
                } else {
                    $userId = auth()->user()->teammember_id;

                    $clientnotification = DB::table('notifications')
                        ->leftjoin('teammembers', 'teammembers.id', 'notifications.created_by')
                        ->leftjoin('notificationtargets', 'notificationtargets.notification_id', 'notifications.id')
                        ->leftjoin('notificationreadorunread', function ($join) use ($userId) {
                            $join->on('notificationreadorunread.notifications_id', 'notifications.id')->where('notificationreadorunread.readedby', $userId);
                        })
                        ->where(function ($query) use ($userId) {
                            $query->where('notifications.targettype', '2')->orWhere('notificationtargets.teammember_id', $userId);
                        })
                        ->select('notifications.*', 'teammembers.team_member', 'teammembers.profilepic', 'notificationreadorunread.status as readstatus')
                        ->latest()
                        ->get();
                }
                $getuser = App\Models\User::where('role_id', Auth::user()->role_id ?? '')
                    ->with('teammember')
                    ->first();

            @endphp


######################################################################################################################
resources\views\backEnd\layouts\includes\header.blade.php
find (count($clientnotification) > 0) and replace @if body
    
            @if (count($clientnotification) > 0)
                <li class="nav-item dropdown notification">
                    <a class="nav-link dropdown-toggle badge-dot" href="#" data-toggle="dropdown">
                        <i class="typcn typcn-bell"></i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right">
                        <h6 class="notification-title">Notifications</h6>
                        <p class="notification-text">You have {{ count($clientnotification) }} unread notification</p>
                        <div class="notification-list">
                            @foreach ($clientnotification as $clientnotificationdata)
                                <div class="media new">
                                    <a href="{{ url('notification/' . $clientnotificationdata->id) }}"
                                        style="color: {{ $clientnotificationdata->readstatus == 1 ? 'Black' : 'red' }}">
                                        <div class="media-body">
                                            <h6>{{ $clientnotificationdata->title }}</h6>
                                            <span>{{ date('F d', strtotime($clientnotificationdata->created_at)) }}
                                                {{ date('h:ia', strtotime($clientnotificationdata->created_at)) }}</span>
                                        </div>
                                    </a>
                                </div>
                                <!--/.media -->
                            @endforeach
                        </div>
                        <!--/.notification -->
                        <div class="dropdown-footer"><a href="{{ url('notification') }}">View All Notification</a></div>
                    </div>
                    <!--/.dropdown-menu -->
                </li>
                <!--/.dropdown-->
            @endif





######################################################################################################################
web.php 
Route::get('/notifications/{id}/mark-as-read', [NotificationController::class, 'markAsRead'])->name('notifications.markAsRead');;

######################################################################################################################

add notificationreadorunread table 