task name Assignment block
app\Http\Controllers\StepController.php

testing on supreet shingh, sunny gupta and bhasker kumar
Controller2222222222222222222222222222222222222222222222222222222222222222222222



############################################
app\Http\Controllers\StepController.php
after this function viewAssignment()

public function  assignmentreject($id, $status, $teamid)
    {
        // dd($teamid);
        try {
            if ($status == 1) {
                DB::table('assignmentteammappings')->where('id', $id)->update([
                    'status'   => 1,
                ]);
            } else {
                DB::table('assignmentteammappings')->where('id', $id)->update([
                    'status'   => 0,
                ]);

                // timesheet rejected mail
                $data = DB::table('teammembers')
                    ->where('teammembers.id', $teamid)
                    ->first();
                //   dd($data);
                $emailData = [
                    'emailid' => $data->emailid,
                    'teammember_name' => $data->team_member,
                ];

                Mail::send('emails.assignmentrejected', $emailData, function ($msg) use ($emailData) {
                    $msg->to([$emailData['emailid']]);
                    $msg->subject('Assignment rejected');
                });
                // timesheet rejected mail end hare

            }
            $output = array('msg' => 'Rejected Successfully');
            return back()->with('statuss', $output);
        } catch (Exception $e) {
            DB::rollBack();
            Log::emergency("File:" . $e->getFile() . "Line:" . $e->getLine() . "Message:" . $e->getMessage());
            report($e);
            $output = array('msg' => $e->getMessage());
            return back()->withErrors($output)->withInput();
        }
    }



    ##############################################################
    app\Http\Controllers\AssignmentmappingController.php
    replace yearWise function 


     public function yearWise(Request $request)
    {
        if (auth()->user()->role_id == 11) {
            $clientid = $request->clientid;
            $assignmentmappingData =  DB::table('assignmentmappings')
                ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
                ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
                ->leftjoin('assignmentteammappings', 'assignmentteammappings.assignmentmapping_id', 'assignmentmappings.id')
                ->leftjoin('assignments', 'assignments.id', 'assignmentmappings.assignment_id')
                ->where('clients.id', $request->clientid)
                ->where('assignmentmappings.year', $request->year)
                ->select(
                    'assignmentmappings.*',
                    'assignmentbudgetings.duedate',
                    'assignmentbudgetings.assignmentname',
                    'assignments.assignment_name',
                    'clients.client_name'
                )->distinct()->get();
            return view('backEnd.assignmentmapping.yearwise', compact('assignmentmappingData', 'clientid'));
        } elseif (auth()->user()->role_id == 13) {
            $clientid = $request->clientid;
            $assigned =  DB::table('assignmentmappings')
                ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
                ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
                ->leftjoin('assignmentteammappings', 'assignmentteammappings.assignmentmapping_id', 'assignmentmappings.id')
                ->leftjoin('assignments', 'assignments.id', 'assignmentmappings.assignment_id')
                ->where('clients.id', $request->clientid)
                ->where('assignmentmappings.year', $request->year)
                ->where('assignmentmappings.leadpartner', auth()->user()->teammember_id)
                ->select(
                    'assignmentmappings.*',
                    'assignmentbudgetings.duedate',
                    'assignments.assignment_name',
                    'clients.client_name',
                    'assignmentbudgetings.assignmentname'
                )->distinct()->get();

            $otherassigned =  DB::table('assignmentmappings')
                ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
                ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
                ->leftjoin('assignmentteammappings', 'assignmentteammappings.assignmentmapping_id', 'assignmentmappings.id')
                ->leftjoin('assignments', 'assignments.id', 'assignmentmappings.assignment_id')
                ->where('clients.id', $request->clientid)
                ->where('assignmentmappings.year', $request->year)
                ->where('assignmentmappings.otherpartner', auth()->user()->teammember_id)
                ->select(
                    'assignmentmappings.*',
                    'assignmentbudgetings.duedate',
                    'assignments.assignment_name',
                    'clients.client_name',
                    'assignmentbudgetings.assignmentname'
                )->distinct()->get();
            return view('backEnd.assignmentmapping.yearwisepartnerlist', compact('assigned', 'otherassigned', 'clientid'));
        } else {
            // assrejected
            $clientid = $request->clientid;
            $assignmentmappingData =  DB::table('assignmentmappings')
                ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
                ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
                ->leftjoin('assignmentteammappings', 'assignmentteammappings.assignmentmapping_id', 'assignmentmappings.id')
                ->leftjoin('assignments', 'assignments.id', 'assignmentmappings.assignment_id')
                ->where('clients.id', $request->clientid)
                ->where('assignmentmappings.year', $request->year)
                ->where('assignmentteammappings.teammember_id', auth()->user()->teammember_id)
                ->where('assignmentteammappings.status', 1)
                ->select(
                    'assignmentmappings.*',
                    'assignmentbudgetings.duedate',
                    'assignmentbudgetings.assignmentname',
                    'assignments.assignment_name',
                    'clients.client_name'
                )->distinct()->get();
            // assrejected
            return view('backEnd.assignmentmapping.yearwise', compact('assignmentmappingData', 'clientid'));
        }
    }


####################################################################
replace this code in create function in
app\Http\Controllers\TimesheetController.php
serach if (isset($request->cid)) and remove if body  


if (isset($request->cid)) {
        if (auth()->user()->role_id == 13) {
          echo "<option>Select Assignment</option>";

          if ($request->cid == 29 || $request->cid == 32 || $request->cid == 33 || $request->cid == 34) {
            $clients = DB::table('clients')
              // ->whereIn('id', [29, 32, 33, 34])
              ->where('id', $request->cid)
              ->select('clients.client_name', 'clients.id')
              ->orderBy('client_name', 'ASC')
              ->distinct()->get();
            // dd($clients);
            $id = $clients[0]->id;
            foreach (DB::table('assignmentbudgetings')->where('client_id', $id)
              ->leftjoin('assignments', 'assignments.id', 'assignmentbudgetings.assignment_id')
              ->orderBy('assignment_name')->get() as $sub) {
              echo "<option value='" . $sub->assignmentgenerate_id . "'>" . $sub->assignment_name . '( ' . $sub->assignmentgenerate_id . ' )' . "</option>";
            }
          } else {
            foreach (DB::table('assignmentbudgetings')->where('client_id', $request->cid)
              ->where('created_by', auth()->user()->id)
              ->leftjoin('assignments', 'assignments.id', 'assignmentbudgetings.assignment_id')
              ->orderBy('assignment_name')->get() as $sub) {
              echo "<option value='" . $sub->assignmentgenerate_id . "'>" . $sub->assignment_name . '( ' . $sub->assignmentgenerate_id . ' )' . "</option>";
            }
          }
        }
        // assreject
        else {
          echo "<option>Select Assignment</option>";
          foreach (DB::table('assignmentbudgetings')
            ->join('assignmentmappings', 'assignmentmappings.assignmentgenerate_id', 'assignmentbudgetings.assignmentgenerate_id')
            ->leftjoin('assignments', 'assignments.id', 'assignmentmappings.assignment_id')
            ->leftjoin('assignmentteammappings', 'assignmentteammappings.assignmentmapping_id', 'assignmentmappings.id')
            ->where('assignmentbudgetings.client_id', $request->cid)
            ->where('assignmentteammappings.teammember_id', auth()->user()->teammember_id)
            //  ->where('assignmentteammappings.status', '!=', 0)
            // ->whereNull('assignmentteammappings.status')
            ->where(function ($query) {
              $query->whereNull('assignmentteammappings.status')
                ->orWhere('assignmentteammappings.status', '=', 1);
            })
            ->orderBy('assignment_name')->get() as $sub) {
            echo "<option value='" . $sub->assignmentgenerate_id . "'>" . $sub->assignment_name . '( ' . $sub->assignmentgenerate_id . ' )' . "</option>";
          }
        }
      }
222222222222222222222222222222222222222222222222222222222222




blade222222222222222222222222222222222222222222222222222222222
replace code after <div class="row">
resources\views\backEnd\viewassignment.blade.php
search Teammember List
#######################################################
<div class="col-md-5">
                        <div class="card" style="box-shadow:0 4px 8px 0 rgba(0, 0, 0, 0.2);height:250px;">
                            <div class="card-body">
                                <div class="card-head">
                                    <b>Teammember List</b>
                                    {{-- @php
                                        dd($teammemberDatas);
                                    @endphp --}}
                                </div>
                                <hr>
                                <div class="table-responsive example">
                                    <table class="table display table-bordered table-striped table-hover ">
                                        <thead>
                                            <tr>
                                                <th>Name</th>
                                                <th>Role</th>
                                                <th>Mobile No</th>
                                                @if (auth()->user()->role_id == 13 || auth()->user()->role_id == 11)
                                                    <th>Status</th>
                                                @endif
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach ($teammemberDatas as $teammemberData)
                                                <tr>
                                                    <td>{{ $teammemberData->title }} {{ $teammemberData->team_member }}
                                                    </td>
                                                    <td>
                                                        @if ($teammemberData->type == 0)
                                                            <span>Team Leader</span>
                                                        @else
                                                            <span>Staff</span>
                                                        @endif
                                                    </td>
                                                    <td><a
                                                            href="tel:={{ $teammemberData->mobile_no }}">{{ $teammemberData->mobile_no }}</a>
                                                    </td>
                                                    @if (auth()->user()->role_id == 13 || auth()->user()->role_id == 11)
                                                        <td>
                                                            @if ($teammemberData->assignmentteammappingsStatus == 0)
                                                                <a href="{{ url('/assignment/reject/' . $teammemberData->assignmentteammappingsId . '/1/' . $teammemberData->id) }}"
                                                                    onclick="return confirm('Are you sure you want to Active this teammember?');">
                                                                    <button class="btn btn-danger" data-toggle="modal"
                                                                        style="height: 16px; width: auto; border-radius: 7px; display: flex; align-items: center; justify-content: center;font-size: 11px;"
                                                                        data-target="#requestModal">Inactive</button>
                                                                </a>
                                                            @else
                                                                <a href="{{ url('/assignment/reject/' . $teammemberData->assignmentteammappingsId . '/0/' . $teammemberData->id) }}"
                                                                    onclick="return confirm('Are you sure you want to Inactive this teammember?');">
                                                                    <button class="btn btn-primary" data-toggle="modal"
                                                                        style="height: 16px; width: auto; border-radius: 7px; display: flex; align-items: center; justify-content: center;font-size: 11px;"
                                                                        data-target="#requestModal">Active</button>
                                                                </a>
                                                            @endif
                                                        </td>
                                                    @endif
                                                </tr>
                                            @endforeach
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
route22222222222222222222222222222222222222222222222222222222222222222
Route::get('/assignment/reject/{id}/{status}/{teamid}', [StepController::class, 'assignmentreject']);

email22222222222222222222
emails/assignmentrejected blade file 