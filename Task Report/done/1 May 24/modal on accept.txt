Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AssignmentconfirmationController.php
replace otpskipconfirmation() function 

    public function otpskipconfirmation(Request $request)
    {
        try {
            // dd($request);
            if ($request->status == 1) {
                $users = DB::table('debtors')->where('id', $request->debitid)->first();
                $checkbalanceconfirm = DB::table('assignmentbudgetings')->where('assignmentgenerate_id', $request->assignmentgenerate_id)->first();
                if ($request->status == $users->status || $users->status == 0) {
                    return response()->json(['error' => 'You have already submitted'], 400);
                }

                if ($checkbalanceconfirm->balanceconfirmationstatus == 0) {
                    return response()->json(['error' => 'The link has been expired'], 400);
                }

                return response()->json(['success' => true]);
            } else {

                $users = DB::table('debtors')->where('id', $request->debitid1)->first();
                $checkbalanceconfirm = DB::table('assignmentbudgetings')->where('assignmentgenerate_id', $request->assignmentgenerate_id1)->first();

                if ($request->status1 == $users->status || $users->status == 1) {
                    return back()->withErrors(['error' => 'You have allready Submitted'])->withInput();
                }

                if ($checkbalanceconfirm->balanceconfirmationstatus == 0) {
                    return back()->withErrors(['error' => 'The link has been expired'])->withInput();
                }

                $debtorconfirm = DB::table('debtorconfirmations')
                    ->where('assignmentgenerate_id', $request->assignmentgenerate_id1)->where('debtor_id', $request->debitid1)->first();

                $clientid = $request->assignmentgenerate_id1;
                $debtorid = $request->debitid1;
                $status = $request->status1;

                return view('backEnd.assignmentteamreject', compact('status', 'clientid', 'debtorid', 'debtorconfirm'));
            }
        } catch (Exception $e) {
            DB::rollBack();
            Log::emergency("File:" . $e->getFile() . "Line:" . $e->getLine() . "Message:" . $e->getMessage());
            report($e);
            $output = array('msg' => $e->getMessage());
            return back()->withErrors($output)->withInput();
        }
    }



Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AssignmentconfirmationController.php
add acceptstatus() function 

    public function acceptstatus(Request $request)
    {
        try {
            // Log the request data for debugging
            Log::info('Request Data:', $request->all());

            DB::table('debtors')
                ->where('assignmentgenerate_id', $request->assignmentgenerate_id)
                ->where('id', $request->debitid)
                ->update([
                    'status' => $request->status,
                    'updated_at' => date("Y-m-d")
                ]);

            $debtorconfirm = DB::table('debtors')
                ->where('assignmentgenerate_id', $request->assignmentgenerate_id)
                ->where('id', $request->debitid)
                ->first();

            $fileName = '';
            if ($request->hasFile('file')) {
                $file = $request->file('file');
                $destinationPath = 'backEnd/image/confirmationfile';
                $fileName = $file->getClientOriginalName();
                $file->move($destinationPath, $fileName);
            }

            DB::table('debtorconfirmations')->insert([
                'debtor_id' => $request->debitid,
                'assignmentgenerate_id' => $request->assignmentgenerate_id,
                'remark' => null,
                'amount' => null,
                'file' => $fileName,
                'name' => $debtorconfirm->name,
                'created_at' => date("Y-m-d"),
                'updated_at' => date("Y-m-d")
            ]);

            $output = ['msg' => 'Your balance confirmation has been closed.'];
            return response()->json($output, 200); // Return JSON response
        } catch (Exception $e) {
            DB::rollBack();
            Log::emergency("File:" . $e->getFile() . " Line:" . $e->getLine() . " Message:" . $e->getMessage());
            report($e);
            $output = ['msg' => $e->getMessage()];
            return response()->json($output, 500); // Return JSON response with error status
        }
    }


################################################################################################################################
Route 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
add this route 

Route::post('/acceptstatus', [AssignmentconfirmationController::class, 'acceptstatus']);













