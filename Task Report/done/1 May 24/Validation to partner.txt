Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AssignmentconfirmationController.php
replace confirmationstatus() function 


    public function confirmationstatus(Request $request)
    {
        try {
            if ($request->status == 0) {
                $otp1 = $request->otp1;
                $otp2 = $request->otp2;
                $otp3 = $request->otp3;
                $otp4 = $request->otp4;
                $otp5 = $request->otp5;
                $otp6 = $request->otp6;

                $otp = $otp1 . $otp2 . $otp3 . $otp4 . $otp5 . $otp6;
                $users = DB::table('assignmentbudgetings')
                    ->where('assignmentgenerate_id', $request->assignmentgenerate_id)
                    ->first();

                if ($otp == $users->balanceconfirmationotp) {

                    DB::table('assignmentbudgetings')
                        ->where('assignmentgenerate_id', $request->assignmentgenerate_id)->update([
                            'balanceconfirmationstatus' =>  $request->status,
                        ]);

                    $output = array('msg' => 'Your balance confirmation has been closed.');
                    return back()->with('success', $output);
                } else {
                    // return redirect()->back()->with('success_message', 'OTP did not match!.');
                    $output = array('msg' => 'OTP did not match!');
                    return back()->with('statuss', $output);
                }
            } else {

                $otp1 = $request->otp1;
                $otp2 = $request->otp2;
                $otp3 = $request->otp3;
                $otp4 = $request->otp4;
                $otp5 = $request->otp5;
                $otp6 = $request->otp6;

                $otp = $otp1 . $otp2 . $otp3 . $otp4 . $otp5 . $otp6;
                $users = DB::table('assignmentbudgetings')
                    ->where('assignmentgenerate_id', $request->assignmentgenerate_id)
                    ->first();

                if ($otp == $users->balanceconfirmationotp) {

                    DB::table('assignmentbudgetings')
                        ->where('assignmentgenerate_id', $request->assignmentgenerate_id)->update([
                            'balanceconfirmationstatus' =>  $request->status,
                        ]);

                    $output = array('msg' => 'Your balance confirmation has been opened.');
                    return back()->with('success', $output);
                } else {
                    // return redirect()->back()->with('success_message', 'OTP did not match!.');
                    $output = array('msg' => 'OTP did not match!');
                    return back()->with('statuss', $output);
                }
            }
        } catch (Exception $e) {
            DB::rollBack();
            Log::emergency("File:" . $e->getFile() . "Line:" . $e->getLine() . "Message:" . $e->getMessage());
            report($e);
            $output = array('msg' => $e->getMessage());
            return back()->withErrors($output)->withInput();
        }
    }



Controller 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
app\Http\Controllers\AssignmentconfirmationController.php
add confirmationotpsend() function 

    public function confirmationotpsend(Request $request)
    {
        // dd($request);
        $assignment = DB::table('assignmentmappings')
            ->where('assignmentmappings.assignmentgenerate_id', $request->assignmentid)
            ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
            ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
            ->select('assignmentmappings.*', 'assignmentbudgetings.balanceconfirmationstatus', 'assignmentbudgetings.status', 'assignmentbudgetings.assignmentname', 'clients.client_name', 'clients.client_code')
            ->first();

        $teammembers = DB::table('teammembers')
            ->where('id', $assignment->leadpartner)
            ->select('team_member', 'emailid',)
            ->first();

        // dd($assignment->balanceconfirmationstatus);
        // // closed balance confirm
        if ($request->status == 0) {

            if ($assignment->status == 0) {
                $otpsuccessmessage = 'Your assignment is closed, so you cannot close the balance confirmation';
                return response()->json([
                    'otpsuccessmessage' => $otpsuccessmessage,
                    'status' => 1,
                ]);
            }

            if ($assignment->balanceconfirmationstatus == 0) {
                $otpsuccessmessage = 'Your balance confirmation is already close.';
                return response()->json([
                    'otpsuccessmessage' => $otpsuccessmessage,
                    'status' => 1,
                ]);
            }

            $otp = sprintf("%06d", mt_rand(1, 999999));
            DB::table('assignmentbudgetings')
                ->where('assignmentgenerate_id', $request->assignmentid)->update([
                    'balanceconfirmationotp'  => $otp,
                ]);

            $data = array(
                'asassignmentsignmentid' => $assignment->assignmentgenerate_id,
                'assignmentname' => $assignment->assignmentname,
                'client_name' => $assignment->client_name,
                'client_code' => $assignment->client_code,
                'email' => $teammembers->emailid,
                'otp' => $otp,
                'name' => $teammembers->team_member,
                'status' => $request->status,
            );

            Mail::send('emails.balanceconfrmclosed', $data, function ($msg) use ($data, $assignment) {
                $msg->to($data['email']);
                $msg->subject('Balance Confirmation Closed by OTP' . ' || ' . $assignment->assignmentgenerate_id);
            });

            $otpsuccessmessage = 'We have sent otp on mail to close the balance confirmation';
            return response()->json([
                'otpsuccessmessage' => $otpsuccessmessage,
                'status' => $request->status,
            ]);
        }
        // open balance confirm
        else {

            if ($assignment->status == 0) {
                $otpsuccessmessage = 'Your assignment is closed, so you cannot close the balance confirmation';
                return response()->json([
                    'otpsuccessmessage' => $otpsuccessmessage,
                    'status' => 0,
                ]);
            }
            if ($assignment->balanceconfirmationstatus == 1) {
                $otpsuccessmessage = 'Your balance confirmation is already open.';
                return response()->json([
                    'otpsuccessmessage' => $otpsuccessmessage,
                    'status' => 0,
                ]);
            }
            $otp = sprintf("%06d", mt_rand(1, 999999));
            DB::table('assignmentbudgetings')
                ->where('assignmentgenerate_id', $request->assignmentid)->update([
                    'balanceconfirmationotp'  => $otp,
                ]);

            $data = array(
                'asassignmentsignmentid' => $assignment->assignmentgenerate_id,
                'assignmentname' => $assignment->assignmentname,
                'client_name' => $assignment->client_name,
                'client_code' => $assignment->client_code,
                'email' => $teammembers->emailid,
                'otp' => $otp,
                'name' => $teammembers->team_member,
                'status' => $request->status,
            );

            Mail::send('emails.balanceconfrmclosed', $data, function ($msg) use ($data, $assignment) {
                $msg->to($data['email']);
                $msg->subject('Balance Confirmation Opend by OTP' . ' || ' . $assignment->assignmentgenerate_id);
            });

            $otpsuccessmessage = 'We have sent otp on mail to open the balance confirmation';
            return response()->json([
                'otpsuccessmessage' => $otpsuccessmessage,
                'status' => $request->status,
            ]);
        }
    }






Blade 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
replace this file i have sent on whatshapp

resources\views\backEnd\assignmentconfirmation\index.blade.php
resources\views\backEnd\assignmentconfirmationamounthide.blade.php
resources\views\backEnd\assignmentconfirmationaccept.blade.php
resources\views\emails\balanceconfrmclosed.blade.php




################################################################################################################################
Route 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
find this text  [AssignmentconfirmationController::class, 'confirmationstatus']
replace this route 

Route::post('/confirmationstatus', [AssignmentconfirmationController::class, 'confirmationstatus']);


Route 222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
add this route

Route::get('/confirmationotpsend',  [AssignmentconfirmationController::class, 'confirmationotpsend']);












