controller99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999

task name timesheet rejected
app\Http\Controllers\TimesheetController.php
#####################################################
  // after filterDataAdmin ()

 public function weeklylist(Request $request)
  {
    if (auth()->user()->role_id == 13) {

      $date = DB::table('timesheetreport')->where('id', $request->id)->first();

      $timesheetData = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->where('timesheetusers.createdby', $request->teamid)
        ->where('timesheetusers.partner', $request->partnerid)
        ->whereIn('timesheetusers.status', [1, 2, 3])
        ->where('timesheetusers.date', '>=', $date->startdate)
        ->select('timesheetusers.*', 'teammembers.team_member')->orderBy('id', 'ASC')->paginate(10);
      // dd($timesheetData);
    } else {

      $date = DB::table('timesheetreport')->where('id', $request->id)->first();
      $timesheetData = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->where('timesheetusers.createdby', $request->teamid)
        ->where('timesheetusers.partner', $request->partnerid)
        ->whereIn('timesheetusers.status', [1, 2, 3])
        ->where('timesheetusers.date', '>=', $date->startdate)
        ->where('timesheetusers.date', '<=', $date->enddate)
        ->select('timesheetusers.*', 'teammembers.team_member')->orderBy('id', 'ASC')->get();
    }
    // dd($timesheetData);
    return view('backEnd.timesheet.weeklylist', compact('timesheetData'));
  }




#####################################################
  // after create()

//* timesheet edit fubctionality
  public function timesheetEdit(Request $request, $id)
  {
    $timesheetedit = DB::table('timesheetusers')
      ->leftjoin('clients', 'clients.id', 'timesheetusers.client_id')
      ->leftjoin('assignments', 'assignments.id', 'timesheetusers.assignment_id')
      ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
      ->where('timesheetusers.timesheetid', $id)
      ->select('timesheetusers.*', 'clients.client_name', 'assignments.assignment_name', 'teammembers.team_member')
      ->get();

    // client of particular partner
    $partner = Teammember::where('role_id', '=', 13)->where('status', '=', 1)->with('title')->get();
    $teammember = Teammember::where('role_id', '!=', 11)->with('title', 'role')->get();
    if (auth()->user()->role_id == 11) {
      $client = Client::where('status', 1)->select('id', 'client_name')->orderBy('client_name', 'ASC')->get();
    } elseif (auth()->user()->role_id == 13) {
      $clientss = DB::table('assignmentmappings')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
        ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
        ->where('assignmentmappings.leadpartner', auth()->user()->teammember_id)
        ->orwhere('assignmentmappings.otherpartner', auth()->user()->teammember_id)
        ->select('clients.client_name', 'clients.id')
        ->orderBy('client_name', 'ASC')
        ->distinct()->get();

      $clients = DB::table('clients')
        ->whereIn('id', [29, 32, 33, 34])
        ->select('clients.client_name', 'clients.id')
        ->orderBy('client_name', 'ASC')
        ->distinct()->get();

      $client = $clientss->merge($clients);
    } else {
      $client = DB::table('assignmentteammappings')
        ->leftjoin('assignmentmappings', 'assignmentmappings.id', 'assignmentteammappings.assignmentmapping_id')
        ->leftjoin('assignmentbudgetings', 'assignmentbudgetings.assignmentgenerate_id', 'assignmentmappings.assignmentgenerate_id')
        ->leftjoin('clients', 'clients.id', 'assignmentbudgetings.client_id')
        ->orwhere('assignmentteammappings.teammember_id', auth()->user()->teammember_id)
        ->select('clients.client_name', 'clients.id')
        ->orderBy('client_name', 'ASC')
        ->distinct()->get();
    }
    $assignment = Assignment::select('id', 'assignment_name')->get();
    //   dd($assignment);
    // shahid assi
    if ($request->ajax()) {
      // dd(auth()->user()->id);
      if (isset($request->cid)) {
        if (auth()->user()->role_id == 13) {
          echo "<option>Select Assignment</option>";
          foreach (DB::table('assignmentbudgetings')->where('client_id', $request->cid)
            ->where('created_by', auth()->user()->id)
            ->leftjoin('assignments', 'assignments.id', 'assignmentbudgetings.assignment_id')
            ->orderBy('assignment_name')->get() as $sub) {
            echo "<option value='" . $sub->assignmentgenerate_id . "'>" . $sub->assignment_name . '( ' . $sub->assignmentgenerate_id . ' )' . "</option>";
          }
        } else {
          echo "<option>Select Assignment</option>";
          foreach (DB::table('assignmentbudgetings')
            ->join('assignmentmappings', 'assignmentmappings.assignmentgenerate_id', 'assignmentbudgetings.assignmentgenerate_id')
            ->leftjoin('assignments', 'assignments.id', 'assignmentmappings.assignment_id')
            ->leftjoin('assignmentteammappings', 'assignmentteammappings.assignmentmapping_id', 'assignmentmappings.id')
            ->where('assignmentbudgetings.client_id', $request->cid)
            ->where('assignmentteammappings.teammember_id', auth()->user()->teammember_id)
            ->orderBy('assignment_name')->get() as $sub) {
            echo "<option value='" . $sub->assignmentgenerate_id . "'>" . $sub->assignment_name . '( ' . $sub->assignmentgenerate_id . ' )' . "</option>";
          }
        }
      }
      if (isset($request->assignment)) {

        if (auth()->user()->role_id == 11) {
          echo "<option value=''>Select Partner</option>";
          foreach (DB::table('assignmentmappings')

            ->leftjoin('teammembers', 'teammembers.id', 'assignmentmappings.leadpartner')
            ->leftjoin('teammembers as team', 'team.id', 'assignmentmappings.otherpartner')
            ->where('assignmentmappings.assignmentgenerate_id', $request->assignment)
            ->select('team.team_member as team_member', 'team.id', 'teammembers.id', 'teammembers.team_member')
            ->get() as $subs) {
            echo "<option value='" . $subs->id . "'>" . $subs->team_member . "</option>";
          }
        } elseif (auth()->user()->role_id == 13) {
          echo "<option value=''>Select Partner</option>";
          foreach (DB::table('teammembers')
            ->where('id', auth()->user()->teammember_id)
            ->select('teammembers.id', 'teammembers.team_member')
            ->get() as $subs) {
            echo "<option value='" . $subs->id . "'>" . $subs->team_member . "</option>";
          }
        } else {
          //die;
          echo "<option value=''>Select Partner</option>";
          foreach (DB::table('assignmentmappings')

            ->leftjoin('teammembers', 'teammembers.id', 'assignmentmappings.leadpartner')
            ->leftjoin('teammembers as team', 'team.id', 'assignmentmappings.otherpartner')
            ->where('assignmentmappings.assignmentgenerate_id', $request->assignment)
            ->select('team.team_member as team_member', 'team.id', 'teammembers.id', 'teammembers.team_member')
            ->get() as $subs) {
            echo "<option value='" . $subs->id . "'>" . $subs->team_member . "</option>";
          }
        }
      }
    } else {
      return view('backEnd.timesheet.correction', compact('client', 'teammember', 'assignment', 'partner', 'timesheetedit'));
    }
  }


#####################################################
  // after timesheetEdit()

 //* timesheet edit fubctionality
  public function timesheeteditstore(Request $request)
  {
    if (!is_numeric($request->assignment_id)) {
      $assignment = Assignmentmapping::where('assignmentgenerate_id', $request->assignment_id)
        ->select('assignment_id')
        ->get()
        ->toArray();
      $assignment_id = $assignment[0]['assignment_id'];
    } else {
      $assignment_id = $request->assignment_id;
    }
    try {
      DB::table('timesheetusers')->where('id', $request->timesheetusersid)->update([
        'status'   =>   3,
        'client_id'   =>  $request->client_id,
        // 'assignment_id'   =>  $request->assignment_id,
        'assignment_id'   =>   $assignment_id,
        'partner'   =>  $request->partner,
        'workitem'   =>   $request->workitem,
        'createdby'   =>   $request->createdby,
        'location'   =>   $request->location,
        'hour'   =>   $request->hour,
      ]);

      if ($request->status == 2) {
        DB::table('timesheetupdatelogs')->insert([
          'timesheetusers_id'   =>  $request->timesheetusersid,
          'status'   =>   3,
          'created_at' => now(),
          'updated_at' => now(),
        ]);
      }
      $output = array('msg' => 'Updated Successfully');
      // return back()->with('statuss', $output);
      return redirect()->to('rejectedlist')->with('statuss', $output);
    } catch (Exception $e) {
      DB::rollBack();
      Log::emergency("File:" . $e->getFile() . "Line:" . $e->getLine() . "Message:" . $e->getMessage());
      report($e);
      $output = array('msg' => $e->getMessage());
      return back()->withErrors($output)->withInput();
    }
  }



#####################################################
  //1 after timesheeteditstore()

  public function rejectedlist(Request $request)
  {

    if (auth()->user()->role_id == 13) {
      $timesheetData = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->where('timesheetusers.createdby', auth()->user()->teammember_id)
        // ->where('timesheetusers.status', 2)
        ->whereIn('timesheetusers.status', [2, 3])
        ->select('timesheetusers.*', 'teammembers.team_member')->orderBy('id', 'ASC')->paginate(10);
      // dd($timesheetData);
    } else if (auth()->user()->role_id == 11) {
      $timesheetData = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->whereIn('timesheetusers.status', [2, 3])
        ->where('timesheetusers.rejectedby', auth()->user()->teammember_id)
        ->select('timesheetusers.*', 'teammembers.team_member')->orderBy('id', 'ASC')->get();
    } else {
      $timesheetData = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->where('timesheetusers.createdby', auth()->user()->teammember_id)
        ->whereIn('timesheetusers.status', [2, 3])
        ->select('timesheetusers.*', 'teammembers.team_member')->orderBy('id', 'ASC')->paginate(10);
      // dd($timesheetData);
    }
    // dd($timesheetData);
    return view('backEnd.timesheet.rejectedlist', compact('timesheetData'));
  }




#####################################################
  //1 after rejectedlist()


  // all rejected timesheet on patner for team
  public function rejectedlistteam(Request $request)
  {
    // dd($request);
    if (auth()->user()->role_id == 13) {
      $timesheetData = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->where('timesheetusers.status', 2)
        ->where('timesheetusers.rejectedby', auth()->user()->teammember_id)
        ->select('timesheetusers.*', 'teammembers.team_member')->orderBy('id', 'ASC')->get();
    }
    // return view('backEnd.timesheet.rejectedlist', compact('timesheetData'));
    return view('backEnd.timesheet.rejectedlistteam', compact('timesheetData'));
  }




#####################################################
  // after rejectedlistteam()

public function rejectedtimesheetlog(Request $request)
  {
    if (auth()->user()->role_id == 11) {
      $timesheetData = DB::table('timesheetusers')
        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.createdby')
        ->whereIn('timesheetusers.status', [2, 3])
        ->where('timesheetusers.rejectedby', auth()->user()->teammember_id)
        ->select('timesheetusers.*', 'teammembers.team_member')->orderBy('id', 'ASC')->get();
    }
    return view('backEnd.timesheet.rejectedlist', compact('timesheetData'));
  }

#####################################################
  //3 after rejectedtimesheetlog()

public function  timesheetreject($id)
  {

    try {
      DB::table('timesheetusers')->where('id', $id)->update([

        'status'   => 2,
        'rejectedby'   =>   auth()->user()->teammember_id,

      ]);
      // timesheet rejected mail
      $data = DB::table('teammembers')
        ->leftjoin('timesheetusers', 'timesheetusers.createdby', 'teammembers.id')
        ->where('timesheetusers.id', $id)
        ->first();
      $emailData = [
        'emailid' => $data->emailid,
        'teammember_name' => $data->team_member,
      ];

      Mail::send('emails.timesheetrejected', $emailData, function ($msg) use ($emailData) {
        $msg->to([$emailData['emailid']]);
        $msg->subject('Timesheet rejected');
      });
      // timesheet rejected mail end hare


      $output = array('msg' => 'Rejected Successfully');
      return back()->with('statuss', $output);
    } catch (Exception $e) {
      DB::rollBack();
      Log::emergency("File:" . $e->getFile() . "Line:" . $e->getLine() . "Message:" . $e->getMessage());
      report($e);
      $output = array('msg' => $e->getMessage());
      return back()->withErrors($output)->withInput();
    }
  }






blade222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222

changes in status and action on weeklist for admin
resources\views\backEnd\timesheet\weeklylist.blade.php

                                       <td>{{ $total }}</td>

                                        <td>
                                            @foreach ($client_id as $item)
                                                @if ($item->status == 0)
                                                    <span class="badge badge-pill badge-warning">saved</span>
                                                @elseif ($item->status == 1 || $item->status == 3)
                                                    <span class="badge badge-pill badge-danger">submit</span>
                                                @else
                                                    <span class="badge badge-pill badge-secondary">Rejected</span>
                                                @endif
                                            @endforeach
                                        </td>
                                       
                                        @if (Auth::user()->role_id == 11 || Auth::user()->teammember_id != $client_id[0]->createdby)
                                            <td>
                                                @foreach ($client_id as $item)
                                                    @if ($item->status == 2)
                                                        <a href="  {{ url('/timesheet/reject/' . $item->id) }}"
                                                            onclick="return confirm('Are you sure you want to Reject this timesheet?');">
                                                            <button class="btn btn-danger" data-toggle="modal"
                                                                style="height: 16px; width: auto; border-radius: 7px; display: flex; align-items: center; justify-content: center;font-size: 11px;"
                                                                data-target="#requestModal" disabled>Reject</button>
                                                        </a>
                                                    @else
                                                        <a href="  {{ url('/timesheet/reject/' . $item->id) }}"
                                                            onclick="return confirm('Are you sure you want to Reject this timesheet?');">
                                                            <button class="btn btn-danger" data-toggle="modal"
                                                                style="height: 16px; width: auto; border-radius: 7px; display: flex; align-items: center; justify-content: center;font-size: 11px;"
                                                                data-target="#requestModal">Reject</button>
                                                        </a>
                                                    @endif
                                                @endforeach
                                            </td>
                                        @endif

########################################################################################
<tr>
                                <th style="display: none;">id</th>

                                <th>Employee Name</th>
                                <th>Date</th>
                                <th>Day</th>
                                <th>Client Name</th>
                                <th>Assignment Name</th>

                                <th>Work Item</th>
                                <th>Location</th>
                                <th>Partner</th>

                                <th>Total Hour</th>
                                <th>Status</th>
                             

                                @php
                                    $data_createdby = DB::table('timesheetusers')
                                        ->leftjoin('clients', 'clients.id', 'timesheetusers.client_id')
                                        ->leftjoin('assignments', 'assignments.id', 'timesheetusers.assignment_id')
                                        ->leftjoin('teammembers', 'teammembers.id', 'timesheetusers.partner')
                                        ->where('timesheetusers.timesheetid', $timesheetDatas->timesheetid)
                                        ->select('clients.client_name', 'timesheetusers.hour', 'timesheetusers.location', 'timesheetusers.*', 'assignments.assignment_name', 'billable_status', 'workitem', 'teammembers.team_member', 'timesheetusers.timesheetid')
                                        ->get();
                                @endphp
                                @if (Auth::user()->role_id == 11 || Auth::user()->teammember_id != $data_createdby[0]->createdby)
                                    <th>Action</th>
                                @endif
                            </tr>






222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
Rejected Submitted Timesheet tab on patner
replace table tag
resources\views\backEnd\timesheet\statustime.blade.php

<table class="table display table-bordered table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Timesheet</th>
                            </tr>
                        </thead>
                        <tbody>

                            <tr>
                                <td>

                                    <a style="font-size: 19px;" href="{{ url('timesheet/mylist/') }}">
                                        <i class="far fa-folder badge badge-pill badge-success"> <b>My Timesheet</b></i></a>

                                    <hr>

                                    <a style="font-size: 19px;" href="{{ url('timesheet/teamlist/') }}">
                                        <i class="far fa-folder badge badge-pill badge-info"> <b> Team Timesheet</b></i></a>
                                    <hr>
                                    <a style="font-size: 19px;" href="{{ url('rejectedlist/team/') }}">
                                        <i class="far fa-folder badge badge-pill badge-danger"> <b> Rejected Team
                                                Timesheet</b></i></a>
                                    <hr>
                                    <a style="font-size: 19px;" href="{{ url('timesheet/partnersubmitted/') }}">
                                        <i class="far fa-folder badge badge-pill badge-primary"> <b> Submitted
                                                Timesheet</b></i></a>
                                    <hr>
                                    <a style="font-size: 19px;" href="{{ url('rejectedlist/') }}">
                                        <i class="far fa-folder badge badge-pill badge-danger"> <b> Rejected Submitted
                                                Timesheet</b></i></a>
                                    <hr>
                                    {{-- <a style="font-size: 19px;" href="{{ url('rejectedtimesheetlog/') }}">
                                        <i class="far fa-folder badge badge-pill badge-secondary"> <b> Rejected Timesheet
                                                Log</b></i></a>
                                    <hr> --}}

                            </tr>

                        </tbody>
                    </table>



222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
Rejected Submitted Timesheet tab on staf and manager
replace table tag
resources\views\backEnd\timesheet\staffworksheet.blade.php


 <table class="table display table-bordered table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Timesheet</th>
                            </tr>
                        </thead>
                        <tbody>

                            <tr>
                                <td>

                                    <a style="font-size: 19px;" href="{{ url('timesheet/mylist/') }}">
                                        <i class="far fa-folder badge badge-pill badge-success"> <b>My Timesheet</b></i></a>

                                    <hr>

                                    <a style="font-size: 19px;" href="{{ url('timesheet/teamlist/') }}">
                                        <i class="far fa-folder badge badge-pill badge-info"> <b> Submitted
                                                Timesheet</b></i></a>
                                    <hr>
                                    <a style="font-size: 19px;" href="{{ url('rejectedlist/') }}">
                                        <i class="far fa-folder badge badge-pill badge-danger"> <b> Rejected Submitted
                                                Timesheet</b></i></a>
                                    <hr>

                            </tr>

                        </tbody>
                    </table>




222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
 Rejected Submitted Timesheet tab on admin 
replace table tag
resources\views\backEnd\timesheet\adminstatustime.blade.php


 <table class="table display table-bordered table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Timesheet</th>
                            </tr>
                        </thead>
                        <tbody>

                            <tr>
                                <td>

                                    <a style="font-size: 19px;" href="{{ url('timesheet/fulllist/') }}">
                                        <i class="far fa-folder badge badge-pill badge-success"> <b> Timesheet</b></i></a>

                                    <hr>

                                    <a style="font-size: 19px;" href="{{ url('timesheet/allteamsubmitted/') }}">
                                        <i class="far fa-folder badge badge-pill badge-primary"> <b> Submitted
                                                Timesheet</b></i></a>
                                    <hr>
                                    <a style="font-size: 19px;" href="{{ url('rejectedlist/') }}">
                                        <i class="far fa-folder badge badge-pill badge-danger"> <b> Rejected Submitted
                                                Timesheet</b></i></a>
                                    <hr>
                                   
                            </tr>
                        </tbody>
                    </table>




222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
only file add 
resources\views\backEnd\timesheet\rejectedlist.blade.php
resources\views\backEnd\timesheet\rejectedlistteam.blade.php
resources\views\backEnd\timesheet\correction.blade.php

resources\views\emails\timesheetrejected.blade.php



222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
all route 

Route::get('/rejectedlist', [TimesheetController::class, 'rejectedlist']);
Route::get('/rejectedlist/team', [TimesheetController::class, 'rejectedlistteam']);
Route::get('/timesheet/reject/{id}', [TimesheetController::class, 'timesheetreject']);
Route::post('/timesheetupdate/submit',  [TimesheetController::class, 'timesheeteditstore']);
Route::get('/timesheetreject/edit/{id}',  [TimesheetController::class, 'timesheetEdit']);
Route::get('/rejectedtimesheetlog', [TimesheetController::class, 'rejectedtimesheetlog']);

left222222222222222222222222222222222222222222222222222222222222222222222222222

i have left to send 

1 rejectedby column in timesheetusers
2 table name timesheetupdatelogs
3. in rejectedlistteam ()
... ->whereIn('timesheetusers.status', [2, 3])

